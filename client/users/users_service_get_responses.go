// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/secret-server/client-api/models"
)

// UsersServiceGetReader is a Reader for the UsersServiceGet structure.
type UsersServiceGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UsersServiceGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUsersServiceGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUsersServiceGetBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUsersServiceGetForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUsersServiceGetInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /api/v1/users/{id}] UsersService_Get", response, response.Code())
	}
}

// NewUsersServiceGetOK creates a UsersServiceGetOK with default headers values
func NewUsersServiceGetOK() *UsersServiceGetOK {
	return &UsersServiceGetOK{}
}

/*
UsersServiceGetOK describes a response with status code 200, with default header values.

User object
*/
type UsersServiceGetOK struct {
	Payload *models.UserModel
}

// IsSuccess returns true when this users service get o k response has a 2xx status code
func (o *UsersServiceGetOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this users service get o k response has a 3xx status code
func (o *UsersServiceGetOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this users service get o k response has a 4xx status code
func (o *UsersServiceGetOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this users service get o k response has a 5xx status code
func (o *UsersServiceGetOK) IsServerError() bool {
	return false
}

// IsCode returns true when this users service get o k response a status code equal to that given
func (o *UsersServiceGetOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the users service get o k response
func (o *UsersServiceGetOK) Code() int {
	return 200
}

func (o *UsersServiceGetOK) Error() string {
	return fmt.Sprintf("[GET /api/v1/users/{id}][%d] usersServiceGetOK  %+v", 200, o.Payload)
}

func (o *UsersServiceGetOK) String() string {
	return fmt.Sprintf("[GET /api/v1/users/{id}][%d] usersServiceGetOK  %+v", 200, o.Payload)
}

func (o *UsersServiceGetOK) GetPayload() *models.UserModel {
	return o.Payload
}

func (o *UsersServiceGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UserModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUsersServiceGetBadRequest creates a UsersServiceGetBadRequest with default headers values
func NewUsersServiceGetBadRequest() *UsersServiceGetBadRequest {
	return &UsersServiceGetBadRequest{}
}

/*
UsersServiceGetBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type UsersServiceGetBadRequest struct {
	Payload *models.BadRequestResponse
}

// IsSuccess returns true when this users service get bad request response has a 2xx status code
func (o *UsersServiceGetBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this users service get bad request response has a 3xx status code
func (o *UsersServiceGetBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this users service get bad request response has a 4xx status code
func (o *UsersServiceGetBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this users service get bad request response has a 5xx status code
func (o *UsersServiceGetBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this users service get bad request response a status code equal to that given
func (o *UsersServiceGetBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the users service get bad request response
func (o *UsersServiceGetBadRequest) Code() int {
	return 400
}

func (o *UsersServiceGetBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v1/users/{id}][%d] usersServiceGetBadRequest  %+v", 400, o.Payload)
}

func (o *UsersServiceGetBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v1/users/{id}][%d] usersServiceGetBadRequest  %+v", 400, o.Payload)
}

func (o *UsersServiceGetBadRequest) GetPayload() *models.BadRequestResponse {
	return o.Payload
}

func (o *UsersServiceGetBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequestResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUsersServiceGetForbidden creates a UsersServiceGetForbidden with default headers values
func NewUsersServiceGetForbidden() *UsersServiceGetForbidden {
	return &UsersServiceGetForbidden{}
}

/*
UsersServiceGetForbidden describes a response with status code 403, with default header values.

Authentication failed
*/
type UsersServiceGetForbidden struct {
	Payload *models.AuthenticationFailedResponse
}

// IsSuccess returns true when this users service get forbidden response has a 2xx status code
func (o *UsersServiceGetForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this users service get forbidden response has a 3xx status code
func (o *UsersServiceGetForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this users service get forbidden response has a 4xx status code
func (o *UsersServiceGetForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this users service get forbidden response has a 5xx status code
func (o *UsersServiceGetForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this users service get forbidden response a status code equal to that given
func (o *UsersServiceGetForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the users service get forbidden response
func (o *UsersServiceGetForbidden) Code() int {
	return 403
}

func (o *UsersServiceGetForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v1/users/{id}][%d] usersServiceGetForbidden  %+v", 403, o.Payload)
}

func (o *UsersServiceGetForbidden) String() string {
	return fmt.Sprintf("[GET /api/v1/users/{id}][%d] usersServiceGetForbidden  %+v", 403, o.Payload)
}

func (o *UsersServiceGetForbidden) GetPayload() *models.AuthenticationFailedResponse {
	return o.Payload
}

func (o *UsersServiceGetForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AuthenticationFailedResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUsersServiceGetInternalServerError creates a UsersServiceGetInternalServerError with default headers values
func NewUsersServiceGetInternalServerError() *UsersServiceGetInternalServerError {
	return &UsersServiceGetInternalServerError{}
}

/*
UsersServiceGetInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type UsersServiceGetInternalServerError struct {
	Payload *models.InternalServerErrorResponse
}

// IsSuccess returns true when this users service get internal server error response has a 2xx status code
func (o *UsersServiceGetInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this users service get internal server error response has a 3xx status code
func (o *UsersServiceGetInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this users service get internal server error response has a 4xx status code
func (o *UsersServiceGetInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this users service get internal server error response has a 5xx status code
func (o *UsersServiceGetInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this users service get internal server error response a status code equal to that given
func (o *UsersServiceGetInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the users service get internal server error response
func (o *UsersServiceGetInternalServerError) Code() int {
	return 500
}

func (o *UsersServiceGetInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v1/users/{id}][%d] usersServiceGetInternalServerError  %+v", 500, o.Payload)
}

func (o *UsersServiceGetInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v1/users/{id}][%d] usersServiceGetInternalServerError  %+v", 500, o.Payload)
}

func (o *UsersServiceGetInternalServerError) GetPayload() *models.InternalServerErrorResponse {
	return o.Payload
}

func (o *UsersServiceGetInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
