// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/secret-server/client-api/models"
)

// UsersServiceGetRolesReader is a Reader for the UsersServiceGetRoles structure.
type UsersServiceGetRolesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UsersServiceGetRolesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUsersServiceGetRolesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUsersServiceGetRolesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUsersServiceGetRolesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUsersServiceGetRolesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /api/v1/users/{id}/roles] UsersService_GetRoles", response, response.Code())
	}
}

// NewUsersServiceGetRolesOK creates a UsersServiceGetRolesOK with default headers values
func NewUsersServiceGetRolesOK() *UsersServiceGetRolesOK {
	return &UsersServiceGetRolesOK{}
}

/*
UsersServiceGetRolesOK describes a response with status code 200, with default header values.

Success / Fail
*/
type UsersServiceGetRolesOK struct {
	Payload *models.PagingOfRoleSummary
}

// IsSuccess returns true when this users service get roles o k response has a 2xx status code
func (o *UsersServiceGetRolesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this users service get roles o k response has a 3xx status code
func (o *UsersServiceGetRolesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this users service get roles o k response has a 4xx status code
func (o *UsersServiceGetRolesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this users service get roles o k response has a 5xx status code
func (o *UsersServiceGetRolesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this users service get roles o k response a status code equal to that given
func (o *UsersServiceGetRolesOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the users service get roles o k response
func (o *UsersServiceGetRolesOK) Code() int {
	return 200
}

func (o *UsersServiceGetRolesOK) Error() string {
	return fmt.Sprintf("[GET /api/v1/users/{id}/roles][%d] usersServiceGetRolesOK  %+v", 200, o.Payload)
}

func (o *UsersServiceGetRolesOK) String() string {
	return fmt.Sprintf("[GET /api/v1/users/{id}/roles][%d] usersServiceGetRolesOK  %+v", 200, o.Payload)
}

func (o *UsersServiceGetRolesOK) GetPayload() *models.PagingOfRoleSummary {
	return o.Payload
}

func (o *UsersServiceGetRolesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PagingOfRoleSummary)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUsersServiceGetRolesBadRequest creates a UsersServiceGetRolesBadRequest with default headers values
func NewUsersServiceGetRolesBadRequest() *UsersServiceGetRolesBadRequest {
	return &UsersServiceGetRolesBadRequest{}
}

/*
UsersServiceGetRolesBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type UsersServiceGetRolesBadRequest struct {
	Payload *models.BadRequestResponse
}

// IsSuccess returns true when this users service get roles bad request response has a 2xx status code
func (o *UsersServiceGetRolesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this users service get roles bad request response has a 3xx status code
func (o *UsersServiceGetRolesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this users service get roles bad request response has a 4xx status code
func (o *UsersServiceGetRolesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this users service get roles bad request response has a 5xx status code
func (o *UsersServiceGetRolesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this users service get roles bad request response a status code equal to that given
func (o *UsersServiceGetRolesBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the users service get roles bad request response
func (o *UsersServiceGetRolesBadRequest) Code() int {
	return 400
}

func (o *UsersServiceGetRolesBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v1/users/{id}/roles][%d] usersServiceGetRolesBadRequest  %+v", 400, o.Payload)
}

func (o *UsersServiceGetRolesBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v1/users/{id}/roles][%d] usersServiceGetRolesBadRequest  %+v", 400, o.Payload)
}

func (o *UsersServiceGetRolesBadRequest) GetPayload() *models.BadRequestResponse {
	return o.Payload
}

func (o *UsersServiceGetRolesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequestResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUsersServiceGetRolesForbidden creates a UsersServiceGetRolesForbidden with default headers values
func NewUsersServiceGetRolesForbidden() *UsersServiceGetRolesForbidden {
	return &UsersServiceGetRolesForbidden{}
}

/*
UsersServiceGetRolesForbidden describes a response with status code 403, with default header values.

Authentication failed
*/
type UsersServiceGetRolesForbidden struct {
	Payload *models.AuthenticationFailedResponse
}

// IsSuccess returns true when this users service get roles forbidden response has a 2xx status code
func (o *UsersServiceGetRolesForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this users service get roles forbidden response has a 3xx status code
func (o *UsersServiceGetRolesForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this users service get roles forbidden response has a 4xx status code
func (o *UsersServiceGetRolesForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this users service get roles forbidden response has a 5xx status code
func (o *UsersServiceGetRolesForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this users service get roles forbidden response a status code equal to that given
func (o *UsersServiceGetRolesForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the users service get roles forbidden response
func (o *UsersServiceGetRolesForbidden) Code() int {
	return 403
}

func (o *UsersServiceGetRolesForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v1/users/{id}/roles][%d] usersServiceGetRolesForbidden  %+v", 403, o.Payload)
}

func (o *UsersServiceGetRolesForbidden) String() string {
	return fmt.Sprintf("[GET /api/v1/users/{id}/roles][%d] usersServiceGetRolesForbidden  %+v", 403, o.Payload)
}

func (o *UsersServiceGetRolesForbidden) GetPayload() *models.AuthenticationFailedResponse {
	return o.Payload
}

func (o *UsersServiceGetRolesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AuthenticationFailedResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUsersServiceGetRolesInternalServerError creates a UsersServiceGetRolesInternalServerError with default headers values
func NewUsersServiceGetRolesInternalServerError() *UsersServiceGetRolesInternalServerError {
	return &UsersServiceGetRolesInternalServerError{}
}

/*
UsersServiceGetRolesInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type UsersServiceGetRolesInternalServerError struct {
	Payload *models.InternalServerErrorResponse
}

// IsSuccess returns true when this users service get roles internal server error response has a 2xx status code
func (o *UsersServiceGetRolesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this users service get roles internal server error response has a 3xx status code
func (o *UsersServiceGetRolesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this users service get roles internal server error response has a 4xx status code
func (o *UsersServiceGetRolesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this users service get roles internal server error response has a 5xx status code
func (o *UsersServiceGetRolesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this users service get roles internal server error response a status code equal to that given
func (o *UsersServiceGetRolesInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the users service get roles internal server error response
func (o *UsersServiceGetRolesInternalServerError) Code() int {
	return 500
}

func (o *UsersServiceGetRolesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v1/users/{id}/roles][%d] usersServiceGetRolesInternalServerError  %+v", 500, o.Payload)
}

func (o *UsersServiceGetRolesInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v1/users/{id}/roles][%d] usersServiceGetRolesInternalServerError  %+v", 500, o.Payload)
}

func (o *UsersServiceGetRolesInternalServerError) GetPayload() *models.InternalServerErrorResponse {
	return o.Payload
}

func (o *UsersServiceGetRolesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
