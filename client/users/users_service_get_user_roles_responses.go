// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/secret-server/client-api/models"
)

// UsersServiceGetUserRolesReader is a Reader for the UsersServiceGetUserRoles structure.
type UsersServiceGetUserRolesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UsersServiceGetUserRolesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUsersServiceGetUserRolesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUsersServiceGetUserRolesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUsersServiceGetUserRolesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUsersServiceGetUserRolesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /api/v1/users/{userId}/roles-assigned] UsersService_GetUserRoles", response, response.Code())
	}
}

// NewUsersServiceGetUserRolesOK creates a UsersServiceGetUserRolesOK with default headers values
func NewUsersServiceGetUserRolesOK() *UsersServiceGetUserRolesOK {
	return &UsersServiceGetUserRolesOK{}
}

/*
UsersServiceGetUserRolesOK describes a response with status code 200, with default header values.

User role summary
*/
type UsersServiceGetUserRolesOK struct {
	Payload *models.PagingOfUserRoleSummary
}

// IsSuccess returns true when this users service get user roles o k response has a 2xx status code
func (o *UsersServiceGetUserRolesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this users service get user roles o k response has a 3xx status code
func (o *UsersServiceGetUserRolesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this users service get user roles o k response has a 4xx status code
func (o *UsersServiceGetUserRolesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this users service get user roles o k response has a 5xx status code
func (o *UsersServiceGetUserRolesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this users service get user roles o k response a status code equal to that given
func (o *UsersServiceGetUserRolesOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the users service get user roles o k response
func (o *UsersServiceGetUserRolesOK) Code() int {
	return 200
}

func (o *UsersServiceGetUserRolesOK) Error() string {
	return fmt.Sprintf("[GET /api/v1/users/{userId}/roles-assigned][%d] usersServiceGetUserRolesOK  %+v", 200, o.Payload)
}

func (o *UsersServiceGetUserRolesOK) String() string {
	return fmt.Sprintf("[GET /api/v1/users/{userId}/roles-assigned][%d] usersServiceGetUserRolesOK  %+v", 200, o.Payload)
}

func (o *UsersServiceGetUserRolesOK) GetPayload() *models.PagingOfUserRoleSummary {
	return o.Payload
}

func (o *UsersServiceGetUserRolesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PagingOfUserRoleSummary)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUsersServiceGetUserRolesBadRequest creates a UsersServiceGetUserRolesBadRequest with default headers values
func NewUsersServiceGetUserRolesBadRequest() *UsersServiceGetUserRolesBadRequest {
	return &UsersServiceGetUserRolesBadRequest{}
}

/*
UsersServiceGetUserRolesBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type UsersServiceGetUserRolesBadRequest struct {
	Payload *models.BadRequestResponse
}

// IsSuccess returns true when this users service get user roles bad request response has a 2xx status code
func (o *UsersServiceGetUserRolesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this users service get user roles bad request response has a 3xx status code
func (o *UsersServiceGetUserRolesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this users service get user roles bad request response has a 4xx status code
func (o *UsersServiceGetUserRolesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this users service get user roles bad request response has a 5xx status code
func (o *UsersServiceGetUserRolesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this users service get user roles bad request response a status code equal to that given
func (o *UsersServiceGetUserRolesBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the users service get user roles bad request response
func (o *UsersServiceGetUserRolesBadRequest) Code() int {
	return 400
}

func (o *UsersServiceGetUserRolesBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v1/users/{userId}/roles-assigned][%d] usersServiceGetUserRolesBadRequest  %+v", 400, o.Payload)
}

func (o *UsersServiceGetUserRolesBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v1/users/{userId}/roles-assigned][%d] usersServiceGetUserRolesBadRequest  %+v", 400, o.Payload)
}

func (o *UsersServiceGetUserRolesBadRequest) GetPayload() *models.BadRequestResponse {
	return o.Payload
}

func (o *UsersServiceGetUserRolesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequestResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUsersServiceGetUserRolesForbidden creates a UsersServiceGetUserRolesForbidden with default headers values
func NewUsersServiceGetUserRolesForbidden() *UsersServiceGetUserRolesForbidden {
	return &UsersServiceGetUserRolesForbidden{}
}

/*
UsersServiceGetUserRolesForbidden describes a response with status code 403, with default header values.

Authentication failed
*/
type UsersServiceGetUserRolesForbidden struct {
	Payload *models.AuthenticationFailedResponse
}

// IsSuccess returns true when this users service get user roles forbidden response has a 2xx status code
func (o *UsersServiceGetUserRolesForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this users service get user roles forbidden response has a 3xx status code
func (o *UsersServiceGetUserRolesForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this users service get user roles forbidden response has a 4xx status code
func (o *UsersServiceGetUserRolesForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this users service get user roles forbidden response has a 5xx status code
func (o *UsersServiceGetUserRolesForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this users service get user roles forbidden response a status code equal to that given
func (o *UsersServiceGetUserRolesForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the users service get user roles forbidden response
func (o *UsersServiceGetUserRolesForbidden) Code() int {
	return 403
}

func (o *UsersServiceGetUserRolesForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v1/users/{userId}/roles-assigned][%d] usersServiceGetUserRolesForbidden  %+v", 403, o.Payload)
}

func (o *UsersServiceGetUserRolesForbidden) String() string {
	return fmt.Sprintf("[GET /api/v1/users/{userId}/roles-assigned][%d] usersServiceGetUserRolesForbidden  %+v", 403, o.Payload)
}

func (o *UsersServiceGetUserRolesForbidden) GetPayload() *models.AuthenticationFailedResponse {
	return o.Payload
}

func (o *UsersServiceGetUserRolesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AuthenticationFailedResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUsersServiceGetUserRolesInternalServerError creates a UsersServiceGetUserRolesInternalServerError with default headers values
func NewUsersServiceGetUserRolesInternalServerError() *UsersServiceGetUserRolesInternalServerError {
	return &UsersServiceGetUserRolesInternalServerError{}
}

/*
UsersServiceGetUserRolesInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type UsersServiceGetUserRolesInternalServerError struct {
	Payload *models.InternalServerErrorResponse
}

// IsSuccess returns true when this users service get user roles internal server error response has a 2xx status code
func (o *UsersServiceGetUserRolesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this users service get user roles internal server error response has a 3xx status code
func (o *UsersServiceGetUserRolesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this users service get user roles internal server error response has a 4xx status code
func (o *UsersServiceGetUserRolesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this users service get user roles internal server error response has a 5xx status code
func (o *UsersServiceGetUserRolesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this users service get user roles internal server error response a status code equal to that given
func (o *UsersServiceGetUserRolesInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the users service get user roles internal server error response
func (o *UsersServiceGetUserRolesInternalServerError) Code() int {
	return 500
}

func (o *UsersServiceGetUserRolesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v1/users/{userId}/roles-assigned][%d] usersServiceGetUserRolesInternalServerError  %+v", 500, o.Payload)
}

func (o *UsersServiceGetUserRolesInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v1/users/{userId}/roles-assigned][%d] usersServiceGetUserRolesInternalServerError  %+v", 500, o.Payload)
}

func (o *UsersServiceGetUserRolesInternalServerError) GetPayload() *models.InternalServerErrorResponse {
	return o.Payload
}

func (o *UsersServiceGetUserRolesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
