// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/secret-server/client-api/models"
)

// UsersServiceCreateUserRolesReader is a Reader for the UsersServiceCreateUserRoles structure.
type UsersServiceCreateUserRolesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UsersServiceCreateUserRolesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUsersServiceCreateUserRolesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUsersServiceCreateUserRolesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUsersServiceCreateUserRolesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUsersServiceCreateUserRolesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /api/v1/users/{id}/roles] UsersService_CreateUserRoles", response, response.Code())
	}
}

// NewUsersServiceCreateUserRolesOK creates a UsersServiceCreateUserRolesOK with default headers values
func NewUsersServiceCreateUserRolesOK() *UsersServiceCreateUserRolesOK {
	return &UsersServiceCreateUserRolesOK{}
}

/*
UsersServiceCreateUserRolesOK describes a response with status code 200, with default header values.

Success / Fail
*/
type UsersServiceCreateUserRolesOK struct {
	Payload *models.RoleChangeStatusModel
}

// IsSuccess returns true when this users service create user roles o k response has a 2xx status code
func (o *UsersServiceCreateUserRolesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this users service create user roles o k response has a 3xx status code
func (o *UsersServiceCreateUserRolesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this users service create user roles o k response has a 4xx status code
func (o *UsersServiceCreateUserRolesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this users service create user roles o k response has a 5xx status code
func (o *UsersServiceCreateUserRolesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this users service create user roles o k response a status code equal to that given
func (o *UsersServiceCreateUserRolesOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the users service create user roles o k response
func (o *UsersServiceCreateUserRolesOK) Code() int {
	return 200
}

func (o *UsersServiceCreateUserRolesOK) Error() string {
	return fmt.Sprintf("[POST /api/v1/users/{id}/roles][%d] usersServiceCreateUserRolesOK  %+v", 200, o.Payload)
}

func (o *UsersServiceCreateUserRolesOK) String() string {
	return fmt.Sprintf("[POST /api/v1/users/{id}/roles][%d] usersServiceCreateUserRolesOK  %+v", 200, o.Payload)
}

func (o *UsersServiceCreateUserRolesOK) GetPayload() *models.RoleChangeStatusModel {
	return o.Payload
}

func (o *UsersServiceCreateUserRolesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RoleChangeStatusModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUsersServiceCreateUserRolesBadRequest creates a UsersServiceCreateUserRolesBadRequest with default headers values
func NewUsersServiceCreateUserRolesBadRequest() *UsersServiceCreateUserRolesBadRequest {
	return &UsersServiceCreateUserRolesBadRequest{}
}

/*
UsersServiceCreateUserRolesBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type UsersServiceCreateUserRolesBadRequest struct {
	Payload *models.BadRequestResponse
}

// IsSuccess returns true when this users service create user roles bad request response has a 2xx status code
func (o *UsersServiceCreateUserRolesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this users service create user roles bad request response has a 3xx status code
func (o *UsersServiceCreateUserRolesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this users service create user roles bad request response has a 4xx status code
func (o *UsersServiceCreateUserRolesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this users service create user roles bad request response has a 5xx status code
func (o *UsersServiceCreateUserRolesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this users service create user roles bad request response a status code equal to that given
func (o *UsersServiceCreateUserRolesBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the users service create user roles bad request response
func (o *UsersServiceCreateUserRolesBadRequest) Code() int {
	return 400
}

func (o *UsersServiceCreateUserRolesBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v1/users/{id}/roles][%d] usersServiceCreateUserRolesBadRequest  %+v", 400, o.Payload)
}

func (o *UsersServiceCreateUserRolesBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v1/users/{id}/roles][%d] usersServiceCreateUserRolesBadRequest  %+v", 400, o.Payload)
}

func (o *UsersServiceCreateUserRolesBadRequest) GetPayload() *models.BadRequestResponse {
	return o.Payload
}

func (o *UsersServiceCreateUserRolesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequestResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUsersServiceCreateUserRolesForbidden creates a UsersServiceCreateUserRolesForbidden with default headers values
func NewUsersServiceCreateUserRolesForbidden() *UsersServiceCreateUserRolesForbidden {
	return &UsersServiceCreateUserRolesForbidden{}
}

/*
UsersServiceCreateUserRolesForbidden describes a response with status code 403, with default header values.

Authentication failed
*/
type UsersServiceCreateUserRolesForbidden struct {
	Payload *models.AuthenticationFailedResponse
}

// IsSuccess returns true when this users service create user roles forbidden response has a 2xx status code
func (o *UsersServiceCreateUserRolesForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this users service create user roles forbidden response has a 3xx status code
func (o *UsersServiceCreateUserRolesForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this users service create user roles forbidden response has a 4xx status code
func (o *UsersServiceCreateUserRolesForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this users service create user roles forbidden response has a 5xx status code
func (o *UsersServiceCreateUserRolesForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this users service create user roles forbidden response a status code equal to that given
func (o *UsersServiceCreateUserRolesForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the users service create user roles forbidden response
func (o *UsersServiceCreateUserRolesForbidden) Code() int {
	return 403
}

func (o *UsersServiceCreateUserRolesForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v1/users/{id}/roles][%d] usersServiceCreateUserRolesForbidden  %+v", 403, o.Payload)
}

func (o *UsersServiceCreateUserRolesForbidden) String() string {
	return fmt.Sprintf("[POST /api/v1/users/{id}/roles][%d] usersServiceCreateUserRolesForbidden  %+v", 403, o.Payload)
}

func (o *UsersServiceCreateUserRolesForbidden) GetPayload() *models.AuthenticationFailedResponse {
	return o.Payload
}

func (o *UsersServiceCreateUserRolesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AuthenticationFailedResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUsersServiceCreateUserRolesInternalServerError creates a UsersServiceCreateUserRolesInternalServerError with default headers values
func NewUsersServiceCreateUserRolesInternalServerError() *UsersServiceCreateUserRolesInternalServerError {
	return &UsersServiceCreateUserRolesInternalServerError{}
}

/*
UsersServiceCreateUserRolesInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type UsersServiceCreateUserRolesInternalServerError struct {
	Payload *models.InternalServerErrorResponse
}

// IsSuccess returns true when this users service create user roles internal server error response has a 2xx status code
func (o *UsersServiceCreateUserRolesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this users service create user roles internal server error response has a 3xx status code
func (o *UsersServiceCreateUserRolesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this users service create user roles internal server error response has a 4xx status code
func (o *UsersServiceCreateUserRolesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this users service create user roles internal server error response has a 5xx status code
func (o *UsersServiceCreateUserRolesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this users service create user roles internal server error response a status code equal to that given
func (o *UsersServiceCreateUserRolesInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the users service create user roles internal server error response
func (o *UsersServiceCreateUserRolesInternalServerError) Code() int {
	return 500
}

func (o *UsersServiceCreateUserRolesInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v1/users/{id}/roles][%d] usersServiceCreateUserRolesInternalServerError  %+v", 500, o.Payload)
}

func (o *UsersServiceCreateUserRolesInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v1/users/{id}/roles][%d] usersServiceCreateUserRolesInternalServerError  %+v", 500, o.Payload)
}

func (o *UsersServiceCreateUserRolesInternalServerError) GetPayload() *models.InternalServerErrorResponse {
	return o.Payload
}

func (o *UsersServiceCreateUserRolesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
