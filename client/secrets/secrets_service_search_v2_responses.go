// Code generated by go-swagger; DO NOT EDIT.

package secrets

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/secret-server/client-api/models"
)

// SecretsServiceSearchV2Reader is a Reader for the SecretsServiceSearchV2 structure.
type SecretsServiceSearchV2Reader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SecretsServiceSearchV2Reader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSecretsServiceSearchV2OK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewSecretsServiceSearchV2BadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewSecretsServiceSearchV2Forbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewSecretsServiceSearchV2InternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /api/v2/secrets] SecretsService_SearchV2", response, response.Code())
	}
}

// NewSecretsServiceSearchV2OK creates a SecretsServiceSearchV2OK with default headers values
func NewSecretsServiceSearchV2OK() *SecretsServiceSearchV2OK {
	return &SecretsServiceSearchV2OK{}
}

/*
SecretsServiceSearchV2OK describes a response with status code 200, with default header values.

Secret search result object
*/
type SecretsServiceSearchV2OK struct {
	Payload *models.PagingOfSecretSummary
}

// IsSuccess returns true when this secrets service search v2 o k response has a 2xx status code
func (o *SecretsServiceSearchV2OK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this secrets service search v2 o k response has a 3xx status code
func (o *SecretsServiceSearchV2OK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this secrets service search v2 o k response has a 4xx status code
func (o *SecretsServiceSearchV2OK) IsClientError() bool {
	return false
}

// IsServerError returns true when this secrets service search v2 o k response has a 5xx status code
func (o *SecretsServiceSearchV2OK) IsServerError() bool {
	return false
}

// IsCode returns true when this secrets service search v2 o k response a status code equal to that given
func (o *SecretsServiceSearchV2OK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the secrets service search v2 o k response
func (o *SecretsServiceSearchV2OK) Code() int {
	return 200
}

func (o *SecretsServiceSearchV2OK) Error() string {
	return fmt.Sprintf("[GET /api/v2/secrets][%d] secretsServiceSearchV2OK  %+v", 200, o.Payload)
}

func (o *SecretsServiceSearchV2OK) String() string {
	return fmt.Sprintf("[GET /api/v2/secrets][%d] secretsServiceSearchV2OK  %+v", 200, o.Payload)
}

func (o *SecretsServiceSearchV2OK) GetPayload() *models.PagingOfSecretSummary {
	return o.Payload
}

func (o *SecretsServiceSearchV2OK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PagingOfSecretSummary)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSecretsServiceSearchV2BadRequest creates a SecretsServiceSearchV2BadRequest with default headers values
func NewSecretsServiceSearchV2BadRequest() *SecretsServiceSearchV2BadRequest {
	return &SecretsServiceSearchV2BadRequest{}
}

/*
SecretsServiceSearchV2BadRequest describes a response with status code 400, with default header values.

Bad request
*/
type SecretsServiceSearchV2BadRequest struct {
	Payload *models.BadRequestResponse
}

// IsSuccess returns true when this secrets service search v2 bad request response has a 2xx status code
func (o *SecretsServiceSearchV2BadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this secrets service search v2 bad request response has a 3xx status code
func (o *SecretsServiceSearchV2BadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this secrets service search v2 bad request response has a 4xx status code
func (o *SecretsServiceSearchV2BadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this secrets service search v2 bad request response has a 5xx status code
func (o *SecretsServiceSearchV2BadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this secrets service search v2 bad request response a status code equal to that given
func (o *SecretsServiceSearchV2BadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the secrets service search v2 bad request response
func (o *SecretsServiceSearchV2BadRequest) Code() int {
	return 400
}

func (o *SecretsServiceSearchV2BadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/secrets][%d] secretsServiceSearchV2BadRequest  %+v", 400, o.Payload)
}

func (o *SecretsServiceSearchV2BadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/secrets][%d] secretsServiceSearchV2BadRequest  %+v", 400, o.Payload)
}

func (o *SecretsServiceSearchV2BadRequest) GetPayload() *models.BadRequestResponse {
	return o.Payload
}

func (o *SecretsServiceSearchV2BadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequestResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSecretsServiceSearchV2Forbidden creates a SecretsServiceSearchV2Forbidden with default headers values
func NewSecretsServiceSearchV2Forbidden() *SecretsServiceSearchV2Forbidden {
	return &SecretsServiceSearchV2Forbidden{}
}

/*
SecretsServiceSearchV2Forbidden describes a response with status code 403, with default header values.

Authentication failed
*/
type SecretsServiceSearchV2Forbidden struct {
	Payload *models.AuthenticationFailedResponse
}

// IsSuccess returns true when this secrets service search v2 forbidden response has a 2xx status code
func (o *SecretsServiceSearchV2Forbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this secrets service search v2 forbidden response has a 3xx status code
func (o *SecretsServiceSearchV2Forbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this secrets service search v2 forbidden response has a 4xx status code
func (o *SecretsServiceSearchV2Forbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this secrets service search v2 forbidden response has a 5xx status code
func (o *SecretsServiceSearchV2Forbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this secrets service search v2 forbidden response a status code equal to that given
func (o *SecretsServiceSearchV2Forbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the secrets service search v2 forbidden response
func (o *SecretsServiceSearchV2Forbidden) Code() int {
	return 403
}

func (o *SecretsServiceSearchV2Forbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/secrets][%d] secretsServiceSearchV2Forbidden  %+v", 403, o.Payload)
}

func (o *SecretsServiceSearchV2Forbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/secrets][%d] secretsServiceSearchV2Forbidden  %+v", 403, o.Payload)
}

func (o *SecretsServiceSearchV2Forbidden) GetPayload() *models.AuthenticationFailedResponse {
	return o.Payload
}

func (o *SecretsServiceSearchV2Forbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AuthenticationFailedResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSecretsServiceSearchV2InternalServerError creates a SecretsServiceSearchV2InternalServerError with default headers values
func NewSecretsServiceSearchV2InternalServerError() *SecretsServiceSearchV2InternalServerError {
	return &SecretsServiceSearchV2InternalServerError{}
}

/*
SecretsServiceSearchV2InternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type SecretsServiceSearchV2InternalServerError struct {
	Payload *models.InternalServerErrorResponse
}

// IsSuccess returns true when this secrets service search v2 internal server error response has a 2xx status code
func (o *SecretsServiceSearchV2InternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this secrets service search v2 internal server error response has a 3xx status code
func (o *SecretsServiceSearchV2InternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this secrets service search v2 internal server error response has a 4xx status code
func (o *SecretsServiceSearchV2InternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this secrets service search v2 internal server error response has a 5xx status code
func (o *SecretsServiceSearchV2InternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this secrets service search v2 internal server error response a status code equal to that given
func (o *SecretsServiceSearchV2InternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the secrets service search v2 internal server error response
func (o *SecretsServiceSearchV2InternalServerError) Code() int {
	return 500
}

func (o *SecretsServiceSearchV2InternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/secrets][%d] secretsServiceSearchV2InternalServerError  %+v", 500, o.Payload)
}

func (o *SecretsServiceSearchV2InternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/secrets][%d] secretsServiceSearchV2InternalServerError  %+v", 500, o.Payload)
}

func (o *SecretsServiceSearchV2InternalServerError) GetPayload() *models.InternalServerErrorResponse {
	return o.Payload
}

func (o *SecretsServiceSearchV2InternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
