// Code generated by go-swagger; DO NOT EDIT.

package secrets

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/secret-server/client-api/models"
)

// SecretsServiceDeleteReader is a Reader for the SecretsServiceDelete structure.
type SecretsServiceDeleteReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SecretsServiceDeleteReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSecretsServiceDeleteOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewSecretsServiceDeleteBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewSecretsServiceDeleteForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewSecretsServiceDeleteInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /api/v1/secrets/{id}] SecretsService_Delete", response, response.Code())
	}
}

// NewSecretsServiceDeleteOK creates a SecretsServiceDeleteOK with default headers values
func NewSecretsServiceDeleteOK() *SecretsServiceDeleteOK {
	return &SecretsServiceDeleteOK{}
}

/*
SecretsServiceDeleteOK describes a response with status code 200, with default header values.

Object deletion result
*/
type SecretsServiceDeleteOK struct {
	Payload *models.DeletedModel
}

// IsSuccess returns true when this secrets service delete o k response has a 2xx status code
func (o *SecretsServiceDeleteOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this secrets service delete o k response has a 3xx status code
func (o *SecretsServiceDeleteOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this secrets service delete o k response has a 4xx status code
func (o *SecretsServiceDeleteOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this secrets service delete o k response has a 5xx status code
func (o *SecretsServiceDeleteOK) IsServerError() bool {
	return false
}

// IsCode returns true when this secrets service delete o k response a status code equal to that given
func (o *SecretsServiceDeleteOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the secrets service delete o k response
func (o *SecretsServiceDeleteOK) Code() int {
	return 200
}

func (o *SecretsServiceDeleteOK) Error() string {
	return fmt.Sprintf("[DELETE /api/v1/secrets/{id}][%d] secretsServiceDeleteOK  %+v", 200, o.Payload)
}

func (o *SecretsServiceDeleteOK) String() string {
	return fmt.Sprintf("[DELETE /api/v1/secrets/{id}][%d] secretsServiceDeleteOK  %+v", 200, o.Payload)
}

func (o *SecretsServiceDeleteOK) GetPayload() *models.DeletedModel {
	return o.Payload
}

func (o *SecretsServiceDeleteOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DeletedModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSecretsServiceDeleteBadRequest creates a SecretsServiceDeleteBadRequest with default headers values
func NewSecretsServiceDeleteBadRequest() *SecretsServiceDeleteBadRequest {
	return &SecretsServiceDeleteBadRequest{}
}

/*
SecretsServiceDeleteBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type SecretsServiceDeleteBadRequest struct {
	Payload *models.BadRequestResponse
}

// IsSuccess returns true when this secrets service delete bad request response has a 2xx status code
func (o *SecretsServiceDeleteBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this secrets service delete bad request response has a 3xx status code
func (o *SecretsServiceDeleteBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this secrets service delete bad request response has a 4xx status code
func (o *SecretsServiceDeleteBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this secrets service delete bad request response has a 5xx status code
func (o *SecretsServiceDeleteBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this secrets service delete bad request response a status code equal to that given
func (o *SecretsServiceDeleteBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the secrets service delete bad request response
func (o *SecretsServiceDeleteBadRequest) Code() int {
	return 400
}

func (o *SecretsServiceDeleteBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /api/v1/secrets/{id}][%d] secretsServiceDeleteBadRequest  %+v", 400, o.Payload)
}

func (o *SecretsServiceDeleteBadRequest) String() string {
	return fmt.Sprintf("[DELETE /api/v1/secrets/{id}][%d] secretsServiceDeleteBadRequest  %+v", 400, o.Payload)
}

func (o *SecretsServiceDeleteBadRequest) GetPayload() *models.BadRequestResponse {
	return o.Payload
}

func (o *SecretsServiceDeleteBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequestResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSecretsServiceDeleteForbidden creates a SecretsServiceDeleteForbidden with default headers values
func NewSecretsServiceDeleteForbidden() *SecretsServiceDeleteForbidden {
	return &SecretsServiceDeleteForbidden{}
}

/*
SecretsServiceDeleteForbidden describes a response with status code 403, with default header values.

Authentication failed
*/
type SecretsServiceDeleteForbidden struct {
	Payload *models.AuthenticationFailedResponse
}

// IsSuccess returns true when this secrets service delete forbidden response has a 2xx status code
func (o *SecretsServiceDeleteForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this secrets service delete forbidden response has a 3xx status code
func (o *SecretsServiceDeleteForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this secrets service delete forbidden response has a 4xx status code
func (o *SecretsServiceDeleteForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this secrets service delete forbidden response has a 5xx status code
func (o *SecretsServiceDeleteForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this secrets service delete forbidden response a status code equal to that given
func (o *SecretsServiceDeleteForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the secrets service delete forbidden response
func (o *SecretsServiceDeleteForbidden) Code() int {
	return 403
}

func (o *SecretsServiceDeleteForbidden) Error() string {
	return fmt.Sprintf("[DELETE /api/v1/secrets/{id}][%d] secretsServiceDeleteForbidden  %+v", 403, o.Payload)
}

func (o *SecretsServiceDeleteForbidden) String() string {
	return fmt.Sprintf("[DELETE /api/v1/secrets/{id}][%d] secretsServiceDeleteForbidden  %+v", 403, o.Payload)
}

func (o *SecretsServiceDeleteForbidden) GetPayload() *models.AuthenticationFailedResponse {
	return o.Payload
}

func (o *SecretsServiceDeleteForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AuthenticationFailedResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSecretsServiceDeleteInternalServerError creates a SecretsServiceDeleteInternalServerError with default headers values
func NewSecretsServiceDeleteInternalServerError() *SecretsServiceDeleteInternalServerError {
	return &SecretsServiceDeleteInternalServerError{}
}

/*
SecretsServiceDeleteInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type SecretsServiceDeleteInternalServerError struct {
	Payload *models.InternalServerErrorResponse
}

// IsSuccess returns true when this secrets service delete internal server error response has a 2xx status code
func (o *SecretsServiceDeleteInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this secrets service delete internal server error response has a 3xx status code
func (o *SecretsServiceDeleteInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this secrets service delete internal server error response has a 4xx status code
func (o *SecretsServiceDeleteInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this secrets service delete internal server error response has a 5xx status code
func (o *SecretsServiceDeleteInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this secrets service delete internal server error response a status code equal to that given
func (o *SecretsServiceDeleteInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the secrets service delete internal server error response
func (o *SecretsServiceDeleteInternalServerError) Code() int {
	return 500
}

func (o *SecretsServiceDeleteInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /api/v1/secrets/{id}][%d] secretsServiceDeleteInternalServerError  %+v", 500, o.Payload)
}

func (o *SecretsServiceDeleteInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /api/v1/secrets/{id}][%d] secretsServiceDeleteInternalServerError  %+v", 500, o.Payload)
}

func (o *SecretsServiceDeleteInternalServerError) GetPayload() *models.InternalServerErrorResponse {
	return o.Payload
}

func (o *SecretsServiceDeleteInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
