// Code generated by go-swagger; DO NOT EDIT.

package secrets

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/secret-server/client-api/models"
)

// SecretsServiceExpireReader is a Reader for the SecretsServiceExpire structure.
type SecretsServiceExpireReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SecretsServiceExpireReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSecretsServiceExpireOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewSecretsServiceExpireBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewSecretsServiceExpireForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewSecretsServiceExpireInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /api/v1/secrets/{id}/expire] SecretsService_Expire", response, response.Code())
	}
}

// NewSecretsServiceExpireOK creates a SecretsServiceExpireOK with default headers values
func NewSecretsServiceExpireOK() *SecretsServiceExpireOK {
	return &SecretsServiceExpireOK{}
}

/*
SecretsServiceExpireOK describes a response with status code 200, with default header values.

Secret summary object
*/
type SecretsServiceExpireOK struct {
	Payload *models.SecretSummary
}

// IsSuccess returns true when this secrets service expire o k response has a 2xx status code
func (o *SecretsServiceExpireOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this secrets service expire o k response has a 3xx status code
func (o *SecretsServiceExpireOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this secrets service expire o k response has a 4xx status code
func (o *SecretsServiceExpireOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this secrets service expire o k response has a 5xx status code
func (o *SecretsServiceExpireOK) IsServerError() bool {
	return false
}

// IsCode returns true when this secrets service expire o k response a status code equal to that given
func (o *SecretsServiceExpireOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the secrets service expire o k response
func (o *SecretsServiceExpireOK) Code() int {
	return 200
}

func (o *SecretsServiceExpireOK) Error() string {
	return fmt.Sprintf("[POST /api/v1/secrets/{id}/expire][%d] secretsServiceExpireOK  %+v", 200, o.Payload)
}

func (o *SecretsServiceExpireOK) String() string {
	return fmt.Sprintf("[POST /api/v1/secrets/{id}/expire][%d] secretsServiceExpireOK  %+v", 200, o.Payload)
}

func (o *SecretsServiceExpireOK) GetPayload() *models.SecretSummary {
	return o.Payload
}

func (o *SecretsServiceExpireOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SecretSummary)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSecretsServiceExpireBadRequest creates a SecretsServiceExpireBadRequest with default headers values
func NewSecretsServiceExpireBadRequest() *SecretsServiceExpireBadRequest {
	return &SecretsServiceExpireBadRequest{}
}

/*
SecretsServiceExpireBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type SecretsServiceExpireBadRequest struct {
	Payload *models.BadRequestResponse
}

// IsSuccess returns true when this secrets service expire bad request response has a 2xx status code
func (o *SecretsServiceExpireBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this secrets service expire bad request response has a 3xx status code
func (o *SecretsServiceExpireBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this secrets service expire bad request response has a 4xx status code
func (o *SecretsServiceExpireBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this secrets service expire bad request response has a 5xx status code
func (o *SecretsServiceExpireBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this secrets service expire bad request response a status code equal to that given
func (o *SecretsServiceExpireBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the secrets service expire bad request response
func (o *SecretsServiceExpireBadRequest) Code() int {
	return 400
}

func (o *SecretsServiceExpireBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v1/secrets/{id}/expire][%d] secretsServiceExpireBadRequest  %+v", 400, o.Payload)
}

func (o *SecretsServiceExpireBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v1/secrets/{id}/expire][%d] secretsServiceExpireBadRequest  %+v", 400, o.Payload)
}

func (o *SecretsServiceExpireBadRequest) GetPayload() *models.BadRequestResponse {
	return o.Payload
}

func (o *SecretsServiceExpireBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequestResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSecretsServiceExpireForbidden creates a SecretsServiceExpireForbidden with default headers values
func NewSecretsServiceExpireForbidden() *SecretsServiceExpireForbidden {
	return &SecretsServiceExpireForbidden{}
}

/*
SecretsServiceExpireForbidden describes a response with status code 403, with default header values.

Authentication failed
*/
type SecretsServiceExpireForbidden struct {
	Payload *models.AuthenticationFailedResponse
}

// IsSuccess returns true when this secrets service expire forbidden response has a 2xx status code
func (o *SecretsServiceExpireForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this secrets service expire forbidden response has a 3xx status code
func (o *SecretsServiceExpireForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this secrets service expire forbidden response has a 4xx status code
func (o *SecretsServiceExpireForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this secrets service expire forbidden response has a 5xx status code
func (o *SecretsServiceExpireForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this secrets service expire forbidden response a status code equal to that given
func (o *SecretsServiceExpireForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the secrets service expire forbidden response
func (o *SecretsServiceExpireForbidden) Code() int {
	return 403
}

func (o *SecretsServiceExpireForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v1/secrets/{id}/expire][%d] secretsServiceExpireForbidden  %+v", 403, o.Payload)
}

func (o *SecretsServiceExpireForbidden) String() string {
	return fmt.Sprintf("[POST /api/v1/secrets/{id}/expire][%d] secretsServiceExpireForbidden  %+v", 403, o.Payload)
}

func (o *SecretsServiceExpireForbidden) GetPayload() *models.AuthenticationFailedResponse {
	return o.Payload
}

func (o *SecretsServiceExpireForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AuthenticationFailedResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSecretsServiceExpireInternalServerError creates a SecretsServiceExpireInternalServerError with default headers values
func NewSecretsServiceExpireInternalServerError() *SecretsServiceExpireInternalServerError {
	return &SecretsServiceExpireInternalServerError{}
}

/*
SecretsServiceExpireInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type SecretsServiceExpireInternalServerError struct {
	Payload *models.InternalServerErrorResponse
}

// IsSuccess returns true when this secrets service expire internal server error response has a 2xx status code
func (o *SecretsServiceExpireInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this secrets service expire internal server error response has a 3xx status code
func (o *SecretsServiceExpireInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this secrets service expire internal server error response has a 4xx status code
func (o *SecretsServiceExpireInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this secrets service expire internal server error response has a 5xx status code
func (o *SecretsServiceExpireInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this secrets service expire internal server error response a status code equal to that given
func (o *SecretsServiceExpireInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the secrets service expire internal server error response
func (o *SecretsServiceExpireInternalServerError) Code() int {
	return 500
}

func (o *SecretsServiceExpireInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v1/secrets/{id}/expire][%d] secretsServiceExpireInternalServerError  %+v", 500, o.Payload)
}

func (o *SecretsServiceExpireInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v1/secrets/{id}/expire][%d] secretsServiceExpireInternalServerError  %+v", 500, o.Payload)
}

func (o *SecretsServiceExpireInternalServerError) GetPayload() *models.InternalServerErrorResponse {
	return o.Payload
}

func (o *SecretsServiceExpireInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
