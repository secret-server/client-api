// Code generated by go-swagger; DO NOT EDIT.

package secrets

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/secret-server/client-api/models"
)

// SecretsServiceSearchSecretLookupReader is a Reader for the SecretsServiceSearchSecretLookup structure.
type SecretsServiceSearchSecretLookupReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SecretsServiceSearchSecretLookupReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSecretsServiceSearchSecretLookupOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewSecretsServiceSearchSecretLookupBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewSecretsServiceSearchSecretLookupForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewSecretsServiceSearchSecretLookupInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /api/v1/secrets/lookup] SecretsService_SearchSecretLookup", response, response.Code())
	}
}

// NewSecretsServiceSearchSecretLookupOK creates a SecretsServiceSearchSecretLookupOK with default headers values
func NewSecretsServiceSearchSecretLookupOK() *SecretsServiceSearchSecretLookupOK {
	return &SecretsServiceSearchSecretLookupOK{}
}

/*
SecretsServiceSearchSecretLookupOK describes a response with status code 200, with default header values.

Secret search result object
*/
type SecretsServiceSearchSecretLookupOK struct {
	Payload *models.PagingOfSecretLookup
}

// IsSuccess returns true when this secrets service search secret lookup o k response has a 2xx status code
func (o *SecretsServiceSearchSecretLookupOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this secrets service search secret lookup o k response has a 3xx status code
func (o *SecretsServiceSearchSecretLookupOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this secrets service search secret lookup o k response has a 4xx status code
func (o *SecretsServiceSearchSecretLookupOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this secrets service search secret lookup o k response has a 5xx status code
func (o *SecretsServiceSearchSecretLookupOK) IsServerError() bool {
	return false
}

// IsCode returns true when this secrets service search secret lookup o k response a status code equal to that given
func (o *SecretsServiceSearchSecretLookupOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the secrets service search secret lookup o k response
func (o *SecretsServiceSearchSecretLookupOK) Code() int {
	return 200
}

func (o *SecretsServiceSearchSecretLookupOK) Error() string {
	return fmt.Sprintf("[GET /api/v1/secrets/lookup][%d] secretsServiceSearchSecretLookupOK  %+v", 200, o.Payload)
}

func (o *SecretsServiceSearchSecretLookupOK) String() string {
	return fmt.Sprintf("[GET /api/v1/secrets/lookup][%d] secretsServiceSearchSecretLookupOK  %+v", 200, o.Payload)
}

func (o *SecretsServiceSearchSecretLookupOK) GetPayload() *models.PagingOfSecretLookup {
	return o.Payload
}

func (o *SecretsServiceSearchSecretLookupOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PagingOfSecretLookup)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSecretsServiceSearchSecretLookupBadRequest creates a SecretsServiceSearchSecretLookupBadRequest with default headers values
func NewSecretsServiceSearchSecretLookupBadRequest() *SecretsServiceSearchSecretLookupBadRequest {
	return &SecretsServiceSearchSecretLookupBadRequest{}
}

/*
SecretsServiceSearchSecretLookupBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type SecretsServiceSearchSecretLookupBadRequest struct {
	Payload *models.BadRequestResponse
}

// IsSuccess returns true when this secrets service search secret lookup bad request response has a 2xx status code
func (o *SecretsServiceSearchSecretLookupBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this secrets service search secret lookup bad request response has a 3xx status code
func (o *SecretsServiceSearchSecretLookupBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this secrets service search secret lookup bad request response has a 4xx status code
func (o *SecretsServiceSearchSecretLookupBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this secrets service search secret lookup bad request response has a 5xx status code
func (o *SecretsServiceSearchSecretLookupBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this secrets service search secret lookup bad request response a status code equal to that given
func (o *SecretsServiceSearchSecretLookupBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the secrets service search secret lookup bad request response
func (o *SecretsServiceSearchSecretLookupBadRequest) Code() int {
	return 400
}

func (o *SecretsServiceSearchSecretLookupBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v1/secrets/lookup][%d] secretsServiceSearchSecretLookupBadRequest  %+v", 400, o.Payload)
}

func (o *SecretsServiceSearchSecretLookupBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v1/secrets/lookup][%d] secretsServiceSearchSecretLookupBadRequest  %+v", 400, o.Payload)
}

func (o *SecretsServiceSearchSecretLookupBadRequest) GetPayload() *models.BadRequestResponse {
	return o.Payload
}

func (o *SecretsServiceSearchSecretLookupBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequestResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSecretsServiceSearchSecretLookupForbidden creates a SecretsServiceSearchSecretLookupForbidden with default headers values
func NewSecretsServiceSearchSecretLookupForbidden() *SecretsServiceSearchSecretLookupForbidden {
	return &SecretsServiceSearchSecretLookupForbidden{}
}

/*
SecretsServiceSearchSecretLookupForbidden describes a response with status code 403, with default header values.

Authentication failed
*/
type SecretsServiceSearchSecretLookupForbidden struct {
	Payload *models.AuthenticationFailedResponse
}

// IsSuccess returns true when this secrets service search secret lookup forbidden response has a 2xx status code
func (o *SecretsServiceSearchSecretLookupForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this secrets service search secret lookup forbidden response has a 3xx status code
func (o *SecretsServiceSearchSecretLookupForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this secrets service search secret lookup forbidden response has a 4xx status code
func (o *SecretsServiceSearchSecretLookupForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this secrets service search secret lookup forbidden response has a 5xx status code
func (o *SecretsServiceSearchSecretLookupForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this secrets service search secret lookup forbidden response a status code equal to that given
func (o *SecretsServiceSearchSecretLookupForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the secrets service search secret lookup forbidden response
func (o *SecretsServiceSearchSecretLookupForbidden) Code() int {
	return 403
}

func (o *SecretsServiceSearchSecretLookupForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v1/secrets/lookup][%d] secretsServiceSearchSecretLookupForbidden  %+v", 403, o.Payload)
}

func (o *SecretsServiceSearchSecretLookupForbidden) String() string {
	return fmt.Sprintf("[GET /api/v1/secrets/lookup][%d] secretsServiceSearchSecretLookupForbidden  %+v", 403, o.Payload)
}

func (o *SecretsServiceSearchSecretLookupForbidden) GetPayload() *models.AuthenticationFailedResponse {
	return o.Payload
}

func (o *SecretsServiceSearchSecretLookupForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AuthenticationFailedResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSecretsServiceSearchSecretLookupInternalServerError creates a SecretsServiceSearchSecretLookupInternalServerError with default headers values
func NewSecretsServiceSearchSecretLookupInternalServerError() *SecretsServiceSearchSecretLookupInternalServerError {
	return &SecretsServiceSearchSecretLookupInternalServerError{}
}

/*
SecretsServiceSearchSecretLookupInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type SecretsServiceSearchSecretLookupInternalServerError struct {
	Payload *models.InternalServerErrorResponse
}

// IsSuccess returns true when this secrets service search secret lookup internal server error response has a 2xx status code
func (o *SecretsServiceSearchSecretLookupInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this secrets service search secret lookup internal server error response has a 3xx status code
func (o *SecretsServiceSearchSecretLookupInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this secrets service search secret lookup internal server error response has a 4xx status code
func (o *SecretsServiceSearchSecretLookupInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this secrets service search secret lookup internal server error response has a 5xx status code
func (o *SecretsServiceSearchSecretLookupInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this secrets service search secret lookup internal server error response a status code equal to that given
func (o *SecretsServiceSearchSecretLookupInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the secrets service search secret lookup internal server error response
func (o *SecretsServiceSearchSecretLookupInternalServerError) Code() int {
	return 500
}

func (o *SecretsServiceSearchSecretLookupInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v1/secrets/lookup][%d] secretsServiceSearchSecretLookupInternalServerError  %+v", 500, o.Payload)
}

func (o *SecretsServiceSearchSecretLookupInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v1/secrets/lookup][%d] secretsServiceSearchSecretLookupInternalServerError  %+v", 500, o.Payload)
}

func (o *SecretsServiceSearchSecretLookupInternalServerError) GetPayload() *models.InternalServerErrorResponse {
	return o.Payload
}

func (o *SecretsServiceSearchSecretLookupInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
