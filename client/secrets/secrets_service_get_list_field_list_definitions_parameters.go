// Code generated by go-swagger; DO NOT EDIT.

package secrets

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewSecretsServiceGetListFieldListDefinitionsParams creates a new SecretsServiceGetListFieldListDefinitionsParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewSecretsServiceGetListFieldListDefinitionsParams() *SecretsServiceGetListFieldListDefinitionsParams {
	return &SecretsServiceGetListFieldListDefinitionsParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewSecretsServiceGetListFieldListDefinitionsParamsWithTimeout creates a new SecretsServiceGetListFieldListDefinitionsParams object
// with the ability to set a timeout on a request.
func NewSecretsServiceGetListFieldListDefinitionsParamsWithTimeout(timeout time.Duration) *SecretsServiceGetListFieldListDefinitionsParams {
	return &SecretsServiceGetListFieldListDefinitionsParams{
		timeout: timeout,
	}
}

// NewSecretsServiceGetListFieldListDefinitionsParamsWithContext creates a new SecretsServiceGetListFieldListDefinitionsParams object
// with the ability to set a context for a request.
func NewSecretsServiceGetListFieldListDefinitionsParamsWithContext(ctx context.Context) *SecretsServiceGetListFieldListDefinitionsParams {
	return &SecretsServiceGetListFieldListDefinitionsParams{
		Context: ctx,
	}
}

// NewSecretsServiceGetListFieldListDefinitionsParamsWithHTTPClient creates a new SecretsServiceGetListFieldListDefinitionsParams object
// with the ability to set a custom HTTPClient for a request.
func NewSecretsServiceGetListFieldListDefinitionsParamsWithHTTPClient(client *http.Client) *SecretsServiceGetListFieldListDefinitionsParams {
	return &SecretsServiceGetListFieldListDefinitionsParams{
		HTTPClient: client,
	}
}

/*
SecretsServiceGetListFieldListDefinitionsParams contains all the parameters to send to the API endpoint

	for the secrets service get list field list definitions operation.

	Typically these are written to a http.Request.
*/
type SecretsServiceGetListFieldListDefinitionsParams struct {

	/* AutoCheckIn.

	   Automatically check in a secret after finding or updating.
	*/
	AutoCheckIn *bool

	/* AutoCheckout.

	   Automatically check out secret before finding or updating.
	*/
	AutoCheckout *bool

	/* AutoComment.

	   Leave a comment when checking in or out.
	*/
	AutoComment *string

	/* ForceCheckIn.

	   If secret is checked out, then force a check in.
	*/
	ForceCheckIn *bool

	/* ID.

	   Secret ID

	   Format: int32
	*/
	ID int32

	/* Skip.

	   Number of records to skip before taking results

	   Format: int32
	*/
	Skip *int32

	/* Slug.

	   The field slug name of the list field. This is the fieldSlugName property of the SecretField object. By default, it is the lower-case field name with all spaces replaced with dashes (-).
	*/
	Slug string

	/* SortBy0Direction.

	   Sort direction
	*/
	SortBy0Direction *string

	/* SortBy0Name.

	   Sort field name
	*/
	SortBy0Name *string

	/* SortBy0Priority.

	   Priority index. Sorts with lower values are executed earlier

	   Format: int32
	*/
	SortBy0Priority *int32

	/* Take.

	   Maximum number of records to include in results

	   Format: int32
	*/
	Take *int32

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the secrets service get list field list definitions params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *SecretsServiceGetListFieldListDefinitionsParams) WithDefaults() *SecretsServiceGetListFieldListDefinitionsParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the secrets service get list field list definitions params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *SecretsServiceGetListFieldListDefinitionsParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the secrets service get list field list definitions params
func (o *SecretsServiceGetListFieldListDefinitionsParams) WithTimeout(timeout time.Duration) *SecretsServiceGetListFieldListDefinitionsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the secrets service get list field list definitions params
func (o *SecretsServiceGetListFieldListDefinitionsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the secrets service get list field list definitions params
func (o *SecretsServiceGetListFieldListDefinitionsParams) WithContext(ctx context.Context) *SecretsServiceGetListFieldListDefinitionsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the secrets service get list field list definitions params
func (o *SecretsServiceGetListFieldListDefinitionsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the secrets service get list field list definitions params
func (o *SecretsServiceGetListFieldListDefinitionsParams) WithHTTPClient(client *http.Client) *SecretsServiceGetListFieldListDefinitionsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the secrets service get list field list definitions params
func (o *SecretsServiceGetListFieldListDefinitionsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAutoCheckIn adds the autoCheckIn to the secrets service get list field list definitions params
func (o *SecretsServiceGetListFieldListDefinitionsParams) WithAutoCheckIn(autoCheckIn *bool) *SecretsServiceGetListFieldListDefinitionsParams {
	o.SetAutoCheckIn(autoCheckIn)
	return o
}

// SetAutoCheckIn adds the autoCheckIn to the secrets service get list field list definitions params
func (o *SecretsServiceGetListFieldListDefinitionsParams) SetAutoCheckIn(autoCheckIn *bool) {
	o.AutoCheckIn = autoCheckIn
}

// WithAutoCheckout adds the autoCheckout to the secrets service get list field list definitions params
func (o *SecretsServiceGetListFieldListDefinitionsParams) WithAutoCheckout(autoCheckout *bool) *SecretsServiceGetListFieldListDefinitionsParams {
	o.SetAutoCheckout(autoCheckout)
	return o
}

// SetAutoCheckout adds the autoCheckout to the secrets service get list field list definitions params
func (o *SecretsServiceGetListFieldListDefinitionsParams) SetAutoCheckout(autoCheckout *bool) {
	o.AutoCheckout = autoCheckout
}

// WithAutoComment adds the autoComment to the secrets service get list field list definitions params
func (o *SecretsServiceGetListFieldListDefinitionsParams) WithAutoComment(autoComment *string) *SecretsServiceGetListFieldListDefinitionsParams {
	o.SetAutoComment(autoComment)
	return o
}

// SetAutoComment adds the autoComment to the secrets service get list field list definitions params
func (o *SecretsServiceGetListFieldListDefinitionsParams) SetAutoComment(autoComment *string) {
	o.AutoComment = autoComment
}

// WithForceCheckIn adds the forceCheckIn to the secrets service get list field list definitions params
func (o *SecretsServiceGetListFieldListDefinitionsParams) WithForceCheckIn(forceCheckIn *bool) *SecretsServiceGetListFieldListDefinitionsParams {
	o.SetForceCheckIn(forceCheckIn)
	return o
}

// SetForceCheckIn adds the forceCheckIn to the secrets service get list field list definitions params
func (o *SecretsServiceGetListFieldListDefinitionsParams) SetForceCheckIn(forceCheckIn *bool) {
	o.ForceCheckIn = forceCheckIn
}

// WithID adds the id to the secrets service get list field list definitions params
func (o *SecretsServiceGetListFieldListDefinitionsParams) WithID(id int32) *SecretsServiceGetListFieldListDefinitionsParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the secrets service get list field list definitions params
func (o *SecretsServiceGetListFieldListDefinitionsParams) SetID(id int32) {
	o.ID = id
}

// WithSkip adds the skip to the secrets service get list field list definitions params
func (o *SecretsServiceGetListFieldListDefinitionsParams) WithSkip(skip *int32) *SecretsServiceGetListFieldListDefinitionsParams {
	o.SetSkip(skip)
	return o
}

// SetSkip adds the skip to the secrets service get list field list definitions params
func (o *SecretsServiceGetListFieldListDefinitionsParams) SetSkip(skip *int32) {
	o.Skip = skip
}

// WithSlug adds the slug to the secrets service get list field list definitions params
func (o *SecretsServiceGetListFieldListDefinitionsParams) WithSlug(slug string) *SecretsServiceGetListFieldListDefinitionsParams {
	o.SetSlug(slug)
	return o
}

// SetSlug adds the slug to the secrets service get list field list definitions params
func (o *SecretsServiceGetListFieldListDefinitionsParams) SetSlug(slug string) {
	o.Slug = slug
}

// WithSortBy0Direction adds the sortBy0Direction to the secrets service get list field list definitions params
func (o *SecretsServiceGetListFieldListDefinitionsParams) WithSortBy0Direction(sortBy0Direction *string) *SecretsServiceGetListFieldListDefinitionsParams {
	o.SetSortBy0Direction(sortBy0Direction)
	return o
}

// SetSortBy0Direction adds the sortBy0Direction to the secrets service get list field list definitions params
func (o *SecretsServiceGetListFieldListDefinitionsParams) SetSortBy0Direction(sortBy0Direction *string) {
	o.SortBy0Direction = sortBy0Direction
}

// WithSortBy0Name adds the sortBy0Name to the secrets service get list field list definitions params
func (o *SecretsServiceGetListFieldListDefinitionsParams) WithSortBy0Name(sortBy0Name *string) *SecretsServiceGetListFieldListDefinitionsParams {
	o.SetSortBy0Name(sortBy0Name)
	return o
}

// SetSortBy0Name adds the sortBy0Name to the secrets service get list field list definitions params
func (o *SecretsServiceGetListFieldListDefinitionsParams) SetSortBy0Name(sortBy0Name *string) {
	o.SortBy0Name = sortBy0Name
}

// WithSortBy0Priority adds the sortBy0Priority to the secrets service get list field list definitions params
func (o *SecretsServiceGetListFieldListDefinitionsParams) WithSortBy0Priority(sortBy0Priority *int32) *SecretsServiceGetListFieldListDefinitionsParams {
	o.SetSortBy0Priority(sortBy0Priority)
	return o
}

// SetSortBy0Priority adds the sortBy0Priority to the secrets service get list field list definitions params
func (o *SecretsServiceGetListFieldListDefinitionsParams) SetSortBy0Priority(sortBy0Priority *int32) {
	o.SortBy0Priority = sortBy0Priority
}

// WithTake adds the take to the secrets service get list field list definitions params
func (o *SecretsServiceGetListFieldListDefinitionsParams) WithTake(take *int32) *SecretsServiceGetListFieldListDefinitionsParams {
	o.SetTake(take)
	return o
}

// SetTake adds the take to the secrets service get list field list definitions params
func (o *SecretsServiceGetListFieldListDefinitionsParams) SetTake(take *int32) {
	o.Take = take
}

// WriteToRequest writes these params to a swagger request
func (o *SecretsServiceGetListFieldListDefinitionsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.AutoCheckIn != nil {

		// query param autoCheckIn
		var qrAutoCheckIn bool

		if o.AutoCheckIn != nil {
			qrAutoCheckIn = *o.AutoCheckIn
		}
		qAutoCheckIn := swag.FormatBool(qrAutoCheckIn)
		if qAutoCheckIn != "" {

			if err := r.SetQueryParam("autoCheckIn", qAutoCheckIn); err != nil {
				return err
			}
		}
	}

	if o.AutoCheckout != nil {

		// query param autoCheckout
		var qrAutoCheckout bool

		if o.AutoCheckout != nil {
			qrAutoCheckout = *o.AutoCheckout
		}
		qAutoCheckout := swag.FormatBool(qrAutoCheckout)
		if qAutoCheckout != "" {

			if err := r.SetQueryParam("autoCheckout", qAutoCheckout); err != nil {
				return err
			}
		}
	}

	if o.AutoComment != nil {

		// query param autoComment
		var qrAutoComment string

		if o.AutoComment != nil {
			qrAutoComment = *o.AutoComment
		}
		qAutoComment := qrAutoComment
		if qAutoComment != "" {

			if err := r.SetQueryParam("autoComment", qAutoComment); err != nil {
				return err
			}
		}
	}

	if o.ForceCheckIn != nil {

		// query param forceCheckIn
		var qrForceCheckIn bool

		if o.ForceCheckIn != nil {
			qrForceCheckIn = *o.ForceCheckIn
		}
		qForceCheckIn := swag.FormatBool(qrForceCheckIn)
		if qForceCheckIn != "" {

			if err := r.SetQueryParam("forceCheckIn", qForceCheckIn); err != nil {
				return err
			}
		}
	}

	// path param id
	if err := r.SetPathParam("id", swag.FormatInt32(o.ID)); err != nil {
		return err
	}

	if o.Skip != nil {

		// query param skip
		var qrSkip int32

		if o.Skip != nil {
			qrSkip = *o.Skip
		}
		qSkip := swag.FormatInt32(qrSkip)
		if qSkip != "" {

			if err := r.SetQueryParam("skip", qSkip); err != nil {
				return err
			}
		}
	}

	// path param slug
	if err := r.SetPathParam("slug", o.Slug); err != nil {
		return err
	}

	if o.SortBy0Direction != nil {

		// query param sortBy[0].direction
		var qrSortBy0Direction string

		if o.SortBy0Direction != nil {
			qrSortBy0Direction = *o.SortBy0Direction
		}
		qSortBy0Direction := qrSortBy0Direction
		if qSortBy0Direction != "" {

			if err := r.SetQueryParam("sortBy[0].direction", qSortBy0Direction); err != nil {
				return err
			}
		}
	}

	if o.SortBy0Name != nil {

		// query param sortBy[0].name
		var qrSortBy0Name string

		if o.SortBy0Name != nil {
			qrSortBy0Name = *o.SortBy0Name
		}
		qSortBy0Name := qrSortBy0Name
		if qSortBy0Name != "" {

			if err := r.SetQueryParam("sortBy[0].name", qSortBy0Name); err != nil {
				return err
			}
		}
	}

	if o.SortBy0Priority != nil {

		// query param sortBy[0].priority
		var qrSortBy0Priority int32

		if o.SortBy0Priority != nil {
			qrSortBy0Priority = *o.SortBy0Priority
		}
		qSortBy0Priority := swag.FormatInt32(qrSortBy0Priority)
		if qSortBy0Priority != "" {

			if err := r.SetQueryParam("sortBy[0].priority", qSortBy0Priority); err != nil {
				return err
			}
		}
	}

	if o.Take != nil {

		// query param take
		var qrTake int32

		if o.Take != nil {
			qrTake = *o.Take
		}
		qTake := swag.FormatInt32(qrTake)
		if qTake != "" {

			if err := r.SetQueryParam("take", qTake); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
