// Code generated by go-swagger; DO NOT EDIT.

package secrets

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/secret-server/client-api/models"
)

// SecretsServiceRunHeartBeatReader is a Reader for the SecretsServiceRunHeartBeat structure.
type SecretsServiceRunHeartBeatReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SecretsServiceRunHeartBeatReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSecretsServiceRunHeartBeatOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewSecretsServiceRunHeartBeatBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewSecretsServiceRunHeartBeatForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewSecretsServiceRunHeartBeatInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /api/v1/secrets/{id}/heartbeat] SecretsService_RunHeartBeat", response, response.Code())
	}
}

// NewSecretsServiceRunHeartBeatOK creates a SecretsServiceRunHeartBeatOK with default headers values
func NewSecretsServiceRunHeartBeatOK() *SecretsServiceRunHeartBeatOK {
	return &SecretsServiceRunHeartBeatOK{}
}

/*
SecretsServiceRunHeartBeatOK describes a response with status code 200, with default header values.

Secret summary object
*/
type SecretsServiceRunHeartBeatOK struct {
	Payload *models.SecretSummary
}

// IsSuccess returns true when this secrets service run heart beat o k response has a 2xx status code
func (o *SecretsServiceRunHeartBeatOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this secrets service run heart beat o k response has a 3xx status code
func (o *SecretsServiceRunHeartBeatOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this secrets service run heart beat o k response has a 4xx status code
func (o *SecretsServiceRunHeartBeatOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this secrets service run heart beat o k response has a 5xx status code
func (o *SecretsServiceRunHeartBeatOK) IsServerError() bool {
	return false
}

// IsCode returns true when this secrets service run heart beat o k response a status code equal to that given
func (o *SecretsServiceRunHeartBeatOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the secrets service run heart beat o k response
func (o *SecretsServiceRunHeartBeatOK) Code() int {
	return 200
}

func (o *SecretsServiceRunHeartBeatOK) Error() string {
	return fmt.Sprintf("[POST /api/v1/secrets/{id}/heartbeat][%d] secretsServiceRunHeartBeatOK  %+v", 200, o.Payload)
}

func (o *SecretsServiceRunHeartBeatOK) String() string {
	return fmt.Sprintf("[POST /api/v1/secrets/{id}/heartbeat][%d] secretsServiceRunHeartBeatOK  %+v", 200, o.Payload)
}

func (o *SecretsServiceRunHeartBeatOK) GetPayload() *models.SecretSummary {
	return o.Payload
}

func (o *SecretsServiceRunHeartBeatOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SecretSummary)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSecretsServiceRunHeartBeatBadRequest creates a SecretsServiceRunHeartBeatBadRequest with default headers values
func NewSecretsServiceRunHeartBeatBadRequest() *SecretsServiceRunHeartBeatBadRequest {
	return &SecretsServiceRunHeartBeatBadRequest{}
}

/*
SecretsServiceRunHeartBeatBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type SecretsServiceRunHeartBeatBadRequest struct {
	Payload *models.BadRequestResponse
}

// IsSuccess returns true when this secrets service run heart beat bad request response has a 2xx status code
func (o *SecretsServiceRunHeartBeatBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this secrets service run heart beat bad request response has a 3xx status code
func (o *SecretsServiceRunHeartBeatBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this secrets service run heart beat bad request response has a 4xx status code
func (o *SecretsServiceRunHeartBeatBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this secrets service run heart beat bad request response has a 5xx status code
func (o *SecretsServiceRunHeartBeatBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this secrets service run heart beat bad request response a status code equal to that given
func (o *SecretsServiceRunHeartBeatBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the secrets service run heart beat bad request response
func (o *SecretsServiceRunHeartBeatBadRequest) Code() int {
	return 400
}

func (o *SecretsServiceRunHeartBeatBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v1/secrets/{id}/heartbeat][%d] secretsServiceRunHeartBeatBadRequest  %+v", 400, o.Payload)
}

func (o *SecretsServiceRunHeartBeatBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v1/secrets/{id}/heartbeat][%d] secretsServiceRunHeartBeatBadRequest  %+v", 400, o.Payload)
}

func (o *SecretsServiceRunHeartBeatBadRequest) GetPayload() *models.BadRequestResponse {
	return o.Payload
}

func (o *SecretsServiceRunHeartBeatBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequestResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSecretsServiceRunHeartBeatForbidden creates a SecretsServiceRunHeartBeatForbidden with default headers values
func NewSecretsServiceRunHeartBeatForbidden() *SecretsServiceRunHeartBeatForbidden {
	return &SecretsServiceRunHeartBeatForbidden{}
}

/*
SecretsServiceRunHeartBeatForbidden describes a response with status code 403, with default header values.

Authentication failed
*/
type SecretsServiceRunHeartBeatForbidden struct {
	Payload *models.AuthenticationFailedResponse
}

// IsSuccess returns true when this secrets service run heart beat forbidden response has a 2xx status code
func (o *SecretsServiceRunHeartBeatForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this secrets service run heart beat forbidden response has a 3xx status code
func (o *SecretsServiceRunHeartBeatForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this secrets service run heart beat forbidden response has a 4xx status code
func (o *SecretsServiceRunHeartBeatForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this secrets service run heart beat forbidden response has a 5xx status code
func (o *SecretsServiceRunHeartBeatForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this secrets service run heart beat forbidden response a status code equal to that given
func (o *SecretsServiceRunHeartBeatForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the secrets service run heart beat forbidden response
func (o *SecretsServiceRunHeartBeatForbidden) Code() int {
	return 403
}

func (o *SecretsServiceRunHeartBeatForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v1/secrets/{id}/heartbeat][%d] secretsServiceRunHeartBeatForbidden  %+v", 403, o.Payload)
}

func (o *SecretsServiceRunHeartBeatForbidden) String() string {
	return fmt.Sprintf("[POST /api/v1/secrets/{id}/heartbeat][%d] secretsServiceRunHeartBeatForbidden  %+v", 403, o.Payload)
}

func (o *SecretsServiceRunHeartBeatForbidden) GetPayload() *models.AuthenticationFailedResponse {
	return o.Payload
}

func (o *SecretsServiceRunHeartBeatForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AuthenticationFailedResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSecretsServiceRunHeartBeatInternalServerError creates a SecretsServiceRunHeartBeatInternalServerError with default headers values
func NewSecretsServiceRunHeartBeatInternalServerError() *SecretsServiceRunHeartBeatInternalServerError {
	return &SecretsServiceRunHeartBeatInternalServerError{}
}

/*
SecretsServiceRunHeartBeatInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type SecretsServiceRunHeartBeatInternalServerError struct {
	Payload *models.InternalServerErrorResponse
}

// IsSuccess returns true when this secrets service run heart beat internal server error response has a 2xx status code
func (o *SecretsServiceRunHeartBeatInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this secrets service run heart beat internal server error response has a 3xx status code
func (o *SecretsServiceRunHeartBeatInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this secrets service run heart beat internal server error response has a 4xx status code
func (o *SecretsServiceRunHeartBeatInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this secrets service run heart beat internal server error response has a 5xx status code
func (o *SecretsServiceRunHeartBeatInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this secrets service run heart beat internal server error response a status code equal to that given
func (o *SecretsServiceRunHeartBeatInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the secrets service run heart beat internal server error response
func (o *SecretsServiceRunHeartBeatInternalServerError) Code() int {
	return 500
}

func (o *SecretsServiceRunHeartBeatInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v1/secrets/{id}/heartbeat][%d] secretsServiceRunHeartBeatInternalServerError  %+v", 500, o.Payload)
}

func (o *SecretsServiceRunHeartBeatInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v1/secrets/{id}/heartbeat][%d] secretsServiceRunHeartBeatInternalServerError  %+v", 500, o.Payload)
}

func (o *SecretsServiceRunHeartBeatInternalServerError) GetPayload() *models.InternalServerErrorResponse {
	return o.Payload
}

func (o *SecretsServiceRunHeartBeatInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
