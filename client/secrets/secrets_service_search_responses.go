// Code generated by go-swagger; DO NOT EDIT.

package secrets

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/secret-server/client-api/models"
)

// SecretsServiceSearchReader is a Reader for the SecretsServiceSearch structure.
type SecretsServiceSearchReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SecretsServiceSearchReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSecretsServiceSearchOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewSecretsServiceSearchBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewSecretsServiceSearchForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewSecretsServiceSearchInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /api/v1/secrets] SecretsService_Search", response, response.Code())
	}
}

// NewSecretsServiceSearchOK creates a SecretsServiceSearchOK with default headers values
func NewSecretsServiceSearchOK() *SecretsServiceSearchOK {
	return &SecretsServiceSearchOK{}
}

/*
SecretsServiceSearchOK describes a response with status code 200, with default header values.

Secret search result object
*/
type SecretsServiceSearchOK struct {
	Payload *models.PagingOfSecretSummary
}

// IsSuccess returns true when this secrets service search o k response has a 2xx status code
func (o *SecretsServiceSearchOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this secrets service search o k response has a 3xx status code
func (o *SecretsServiceSearchOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this secrets service search o k response has a 4xx status code
func (o *SecretsServiceSearchOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this secrets service search o k response has a 5xx status code
func (o *SecretsServiceSearchOK) IsServerError() bool {
	return false
}

// IsCode returns true when this secrets service search o k response a status code equal to that given
func (o *SecretsServiceSearchOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the secrets service search o k response
func (o *SecretsServiceSearchOK) Code() int {
	return 200
}

func (o *SecretsServiceSearchOK) Error() string {
	return fmt.Sprintf("[GET /api/v1/secrets][%d] secretsServiceSearchOK  %+v", 200, o.Payload)
}

func (o *SecretsServiceSearchOK) String() string {
	return fmt.Sprintf("[GET /api/v1/secrets][%d] secretsServiceSearchOK  %+v", 200, o.Payload)
}

func (o *SecretsServiceSearchOK) GetPayload() *models.PagingOfSecretSummary {
	return o.Payload
}

func (o *SecretsServiceSearchOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PagingOfSecretSummary)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSecretsServiceSearchBadRequest creates a SecretsServiceSearchBadRequest with default headers values
func NewSecretsServiceSearchBadRequest() *SecretsServiceSearchBadRequest {
	return &SecretsServiceSearchBadRequest{}
}

/*
SecretsServiceSearchBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type SecretsServiceSearchBadRequest struct {
	Payload *models.BadRequestResponse
}

// IsSuccess returns true when this secrets service search bad request response has a 2xx status code
func (o *SecretsServiceSearchBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this secrets service search bad request response has a 3xx status code
func (o *SecretsServiceSearchBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this secrets service search bad request response has a 4xx status code
func (o *SecretsServiceSearchBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this secrets service search bad request response has a 5xx status code
func (o *SecretsServiceSearchBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this secrets service search bad request response a status code equal to that given
func (o *SecretsServiceSearchBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the secrets service search bad request response
func (o *SecretsServiceSearchBadRequest) Code() int {
	return 400
}

func (o *SecretsServiceSearchBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v1/secrets][%d] secretsServiceSearchBadRequest  %+v", 400, o.Payload)
}

func (o *SecretsServiceSearchBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v1/secrets][%d] secretsServiceSearchBadRequest  %+v", 400, o.Payload)
}

func (o *SecretsServiceSearchBadRequest) GetPayload() *models.BadRequestResponse {
	return o.Payload
}

func (o *SecretsServiceSearchBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequestResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSecretsServiceSearchForbidden creates a SecretsServiceSearchForbidden with default headers values
func NewSecretsServiceSearchForbidden() *SecretsServiceSearchForbidden {
	return &SecretsServiceSearchForbidden{}
}

/*
SecretsServiceSearchForbidden describes a response with status code 403, with default header values.

Authentication failed
*/
type SecretsServiceSearchForbidden struct {
	Payload *models.AuthenticationFailedResponse
}

// IsSuccess returns true when this secrets service search forbidden response has a 2xx status code
func (o *SecretsServiceSearchForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this secrets service search forbidden response has a 3xx status code
func (o *SecretsServiceSearchForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this secrets service search forbidden response has a 4xx status code
func (o *SecretsServiceSearchForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this secrets service search forbidden response has a 5xx status code
func (o *SecretsServiceSearchForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this secrets service search forbidden response a status code equal to that given
func (o *SecretsServiceSearchForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the secrets service search forbidden response
func (o *SecretsServiceSearchForbidden) Code() int {
	return 403
}

func (o *SecretsServiceSearchForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v1/secrets][%d] secretsServiceSearchForbidden  %+v", 403, o.Payload)
}

func (o *SecretsServiceSearchForbidden) String() string {
	return fmt.Sprintf("[GET /api/v1/secrets][%d] secretsServiceSearchForbidden  %+v", 403, o.Payload)
}

func (o *SecretsServiceSearchForbidden) GetPayload() *models.AuthenticationFailedResponse {
	return o.Payload
}

func (o *SecretsServiceSearchForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AuthenticationFailedResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSecretsServiceSearchInternalServerError creates a SecretsServiceSearchInternalServerError with default headers values
func NewSecretsServiceSearchInternalServerError() *SecretsServiceSearchInternalServerError {
	return &SecretsServiceSearchInternalServerError{}
}

/*
SecretsServiceSearchInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type SecretsServiceSearchInternalServerError struct {
	Payload *models.InternalServerErrorResponse
}

// IsSuccess returns true when this secrets service search internal server error response has a 2xx status code
func (o *SecretsServiceSearchInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this secrets service search internal server error response has a 3xx status code
func (o *SecretsServiceSearchInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this secrets service search internal server error response has a 4xx status code
func (o *SecretsServiceSearchInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this secrets service search internal server error response has a 5xx status code
func (o *SecretsServiceSearchInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this secrets service search internal server error response a status code equal to that given
func (o *SecretsServiceSearchInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the secrets service search internal server error response
func (o *SecretsServiceSearchInternalServerError) Code() int {
	return 500
}

func (o *SecretsServiceSearchInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v1/secrets][%d] secretsServiceSearchInternalServerError  %+v", 500, o.Payload)
}

func (o *SecretsServiceSearchInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v1/secrets][%d] secretsServiceSearchInternalServerError  %+v", 500, o.Payload)
}

func (o *SecretsServiceSearchInternalServerError) GetPayload() *models.InternalServerErrorResponse {
	return o.Payload
}

func (o *SecretsServiceSearchInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
