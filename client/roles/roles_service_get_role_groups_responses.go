// Code generated by go-swagger; DO NOT EDIT.

package roles

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/secret-server/client-api/models"
)

// RolesServiceGetRoleGroupsReader is a Reader for the RolesServiceGetRoleGroups structure.
type RolesServiceGetRoleGroupsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RolesServiceGetRoleGroupsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewRolesServiceGetRoleGroupsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewRolesServiceGetRoleGroupsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewRolesServiceGetRoleGroupsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewRolesServiceGetRoleGroupsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /api/v1/roles/{id}/groups] RolesService_GetRoleGroups", response, response.Code())
	}
}

// NewRolesServiceGetRoleGroupsOK creates a RolesServiceGetRoleGroupsOK with default headers values
func NewRolesServiceGetRoleGroupsOK() *RolesServiceGetRoleGroupsOK {
	return &RolesServiceGetRoleGroupsOK{}
}

/*
RolesServiceGetRoleGroupsOK describes a response with status code 200, with default header values.

Role Group summary result object
*/
type RolesServiceGetRoleGroupsOK struct {
	Payload *models.PagingOfRoleGroupSummaryAndGroupMembershipFilter
}

// IsSuccess returns true when this roles service get role groups o k response has a 2xx status code
func (o *RolesServiceGetRoleGroupsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this roles service get role groups o k response has a 3xx status code
func (o *RolesServiceGetRoleGroupsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this roles service get role groups o k response has a 4xx status code
func (o *RolesServiceGetRoleGroupsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this roles service get role groups o k response has a 5xx status code
func (o *RolesServiceGetRoleGroupsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this roles service get role groups o k response a status code equal to that given
func (o *RolesServiceGetRoleGroupsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the roles service get role groups o k response
func (o *RolesServiceGetRoleGroupsOK) Code() int {
	return 200
}

func (o *RolesServiceGetRoleGroupsOK) Error() string {
	return fmt.Sprintf("[GET /api/v1/roles/{id}/groups][%d] rolesServiceGetRoleGroupsOK  %+v", 200, o.Payload)
}

func (o *RolesServiceGetRoleGroupsOK) String() string {
	return fmt.Sprintf("[GET /api/v1/roles/{id}/groups][%d] rolesServiceGetRoleGroupsOK  %+v", 200, o.Payload)
}

func (o *RolesServiceGetRoleGroupsOK) GetPayload() *models.PagingOfRoleGroupSummaryAndGroupMembershipFilter {
	return o.Payload
}

func (o *RolesServiceGetRoleGroupsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PagingOfRoleGroupSummaryAndGroupMembershipFilter)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRolesServiceGetRoleGroupsBadRequest creates a RolesServiceGetRoleGroupsBadRequest with default headers values
func NewRolesServiceGetRoleGroupsBadRequest() *RolesServiceGetRoleGroupsBadRequest {
	return &RolesServiceGetRoleGroupsBadRequest{}
}

/*
RolesServiceGetRoleGroupsBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type RolesServiceGetRoleGroupsBadRequest struct {
	Payload *models.BadRequestResponse
}

// IsSuccess returns true when this roles service get role groups bad request response has a 2xx status code
func (o *RolesServiceGetRoleGroupsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this roles service get role groups bad request response has a 3xx status code
func (o *RolesServiceGetRoleGroupsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this roles service get role groups bad request response has a 4xx status code
func (o *RolesServiceGetRoleGroupsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this roles service get role groups bad request response has a 5xx status code
func (o *RolesServiceGetRoleGroupsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this roles service get role groups bad request response a status code equal to that given
func (o *RolesServiceGetRoleGroupsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the roles service get role groups bad request response
func (o *RolesServiceGetRoleGroupsBadRequest) Code() int {
	return 400
}

func (o *RolesServiceGetRoleGroupsBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v1/roles/{id}/groups][%d] rolesServiceGetRoleGroupsBadRequest  %+v", 400, o.Payload)
}

func (o *RolesServiceGetRoleGroupsBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v1/roles/{id}/groups][%d] rolesServiceGetRoleGroupsBadRequest  %+v", 400, o.Payload)
}

func (o *RolesServiceGetRoleGroupsBadRequest) GetPayload() *models.BadRequestResponse {
	return o.Payload
}

func (o *RolesServiceGetRoleGroupsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequestResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRolesServiceGetRoleGroupsForbidden creates a RolesServiceGetRoleGroupsForbidden with default headers values
func NewRolesServiceGetRoleGroupsForbidden() *RolesServiceGetRoleGroupsForbidden {
	return &RolesServiceGetRoleGroupsForbidden{}
}

/*
RolesServiceGetRoleGroupsForbidden describes a response with status code 403, with default header values.

Authentication failed
*/
type RolesServiceGetRoleGroupsForbidden struct {
	Payload *models.AuthenticationFailedResponse
}

// IsSuccess returns true when this roles service get role groups forbidden response has a 2xx status code
func (o *RolesServiceGetRoleGroupsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this roles service get role groups forbidden response has a 3xx status code
func (o *RolesServiceGetRoleGroupsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this roles service get role groups forbidden response has a 4xx status code
func (o *RolesServiceGetRoleGroupsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this roles service get role groups forbidden response has a 5xx status code
func (o *RolesServiceGetRoleGroupsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this roles service get role groups forbidden response a status code equal to that given
func (o *RolesServiceGetRoleGroupsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the roles service get role groups forbidden response
func (o *RolesServiceGetRoleGroupsForbidden) Code() int {
	return 403
}

func (o *RolesServiceGetRoleGroupsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v1/roles/{id}/groups][%d] rolesServiceGetRoleGroupsForbidden  %+v", 403, o.Payload)
}

func (o *RolesServiceGetRoleGroupsForbidden) String() string {
	return fmt.Sprintf("[GET /api/v1/roles/{id}/groups][%d] rolesServiceGetRoleGroupsForbidden  %+v", 403, o.Payload)
}

func (o *RolesServiceGetRoleGroupsForbidden) GetPayload() *models.AuthenticationFailedResponse {
	return o.Payload
}

func (o *RolesServiceGetRoleGroupsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AuthenticationFailedResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRolesServiceGetRoleGroupsInternalServerError creates a RolesServiceGetRoleGroupsInternalServerError with default headers values
func NewRolesServiceGetRoleGroupsInternalServerError() *RolesServiceGetRoleGroupsInternalServerError {
	return &RolesServiceGetRoleGroupsInternalServerError{}
}

/*
RolesServiceGetRoleGroupsInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type RolesServiceGetRoleGroupsInternalServerError struct {
	Payload *models.InternalServerErrorResponse
}

// IsSuccess returns true when this roles service get role groups internal server error response has a 2xx status code
func (o *RolesServiceGetRoleGroupsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this roles service get role groups internal server error response has a 3xx status code
func (o *RolesServiceGetRoleGroupsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this roles service get role groups internal server error response has a 4xx status code
func (o *RolesServiceGetRoleGroupsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this roles service get role groups internal server error response has a 5xx status code
func (o *RolesServiceGetRoleGroupsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this roles service get role groups internal server error response a status code equal to that given
func (o *RolesServiceGetRoleGroupsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the roles service get role groups internal server error response
func (o *RolesServiceGetRoleGroupsInternalServerError) Code() int {
	return 500
}

func (o *RolesServiceGetRoleGroupsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v1/roles/{id}/groups][%d] rolesServiceGetRoleGroupsInternalServerError  %+v", 500, o.Payload)
}

func (o *RolesServiceGetRoleGroupsInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v1/roles/{id}/groups][%d] rolesServiceGetRoleGroupsInternalServerError  %+v", 500, o.Payload)
}

func (o *RolesServiceGetRoleGroupsInternalServerError) GetPayload() *models.InternalServerErrorResponse {
	return o.Payload
}

func (o *RolesServiceGetRoleGroupsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
