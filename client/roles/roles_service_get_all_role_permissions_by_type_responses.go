// Code generated by go-swagger; DO NOT EDIT.

package roles

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/secret-server/client-api/models"
)

// RolesServiceGetAllRolePermissionsByTypeReader is a Reader for the RolesServiceGetAllRolePermissionsByType structure.
type RolesServiceGetAllRolePermissionsByTypeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RolesServiceGetAllRolePermissionsByTypeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewRolesServiceGetAllRolePermissionsByTypeOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewRolesServiceGetAllRolePermissionsByTypeBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewRolesServiceGetAllRolePermissionsByTypeForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewRolesServiceGetAllRolePermissionsByTypeInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /api/v1/roles/{id}/permissions/unassigned] RolesService_GetAllRolePermissionsByType", response, response.Code())
	}
}

// NewRolesServiceGetAllRolePermissionsByTypeOK creates a RolesServiceGetAllRolePermissionsByTypeOK with default headers values
func NewRolesServiceGetAllRolePermissionsByTypeOK() *RolesServiceGetAllRolePermissionsByTypeOK {
	return &RolesServiceGetAllRolePermissionsByTypeOK{}
}

/*
RolesServiceGetAllRolePermissionsByTypeOK describes a response with status code 200, with default header values.

Role model result object
*/
type RolesServiceGetAllRolePermissionsByTypeOK struct {
	Payload *models.PagingOfRolePermissionModel
}

// IsSuccess returns true when this roles service get all role permissions by type o k response has a 2xx status code
func (o *RolesServiceGetAllRolePermissionsByTypeOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this roles service get all role permissions by type o k response has a 3xx status code
func (o *RolesServiceGetAllRolePermissionsByTypeOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this roles service get all role permissions by type o k response has a 4xx status code
func (o *RolesServiceGetAllRolePermissionsByTypeOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this roles service get all role permissions by type o k response has a 5xx status code
func (o *RolesServiceGetAllRolePermissionsByTypeOK) IsServerError() bool {
	return false
}

// IsCode returns true when this roles service get all role permissions by type o k response a status code equal to that given
func (o *RolesServiceGetAllRolePermissionsByTypeOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the roles service get all role permissions by type o k response
func (o *RolesServiceGetAllRolePermissionsByTypeOK) Code() int {
	return 200
}

func (o *RolesServiceGetAllRolePermissionsByTypeOK) Error() string {
	return fmt.Sprintf("[GET /api/v1/roles/{id}/permissions/unassigned][%d] rolesServiceGetAllRolePermissionsByTypeOK  %+v", 200, o.Payload)
}

func (o *RolesServiceGetAllRolePermissionsByTypeOK) String() string {
	return fmt.Sprintf("[GET /api/v1/roles/{id}/permissions/unassigned][%d] rolesServiceGetAllRolePermissionsByTypeOK  %+v", 200, o.Payload)
}

func (o *RolesServiceGetAllRolePermissionsByTypeOK) GetPayload() *models.PagingOfRolePermissionModel {
	return o.Payload
}

func (o *RolesServiceGetAllRolePermissionsByTypeOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PagingOfRolePermissionModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRolesServiceGetAllRolePermissionsByTypeBadRequest creates a RolesServiceGetAllRolePermissionsByTypeBadRequest with default headers values
func NewRolesServiceGetAllRolePermissionsByTypeBadRequest() *RolesServiceGetAllRolePermissionsByTypeBadRequest {
	return &RolesServiceGetAllRolePermissionsByTypeBadRequest{}
}

/*
RolesServiceGetAllRolePermissionsByTypeBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type RolesServiceGetAllRolePermissionsByTypeBadRequest struct {
	Payload *models.BadRequestResponse
}

// IsSuccess returns true when this roles service get all role permissions by type bad request response has a 2xx status code
func (o *RolesServiceGetAllRolePermissionsByTypeBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this roles service get all role permissions by type bad request response has a 3xx status code
func (o *RolesServiceGetAllRolePermissionsByTypeBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this roles service get all role permissions by type bad request response has a 4xx status code
func (o *RolesServiceGetAllRolePermissionsByTypeBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this roles service get all role permissions by type bad request response has a 5xx status code
func (o *RolesServiceGetAllRolePermissionsByTypeBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this roles service get all role permissions by type bad request response a status code equal to that given
func (o *RolesServiceGetAllRolePermissionsByTypeBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the roles service get all role permissions by type bad request response
func (o *RolesServiceGetAllRolePermissionsByTypeBadRequest) Code() int {
	return 400
}

func (o *RolesServiceGetAllRolePermissionsByTypeBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v1/roles/{id}/permissions/unassigned][%d] rolesServiceGetAllRolePermissionsByTypeBadRequest  %+v", 400, o.Payload)
}

func (o *RolesServiceGetAllRolePermissionsByTypeBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v1/roles/{id}/permissions/unassigned][%d] rolesServiceGetAllRolePermissionsByTypeBadRequest  %+v", 400, o.Payload)
}

func (o *RolesServiceGetAllRolePermissionsByTypeBadRequest) GetPayload() *models.BadRequestResponse {
	return o.Payload
}

func (o *RolesServiceGetAllRolePermissionsByTypeBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequestResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRolesServiceGetAllRolePermissionsByTypeForbidden creates a RolesServiceGetAllRolePermissionsByTypeForbidden with default headers values
func NewRolesServiceGetAllRolePermissionsByTypeForbidden() *RolesServiceGetAllRolePermissionsByTypeForbidden {
	return &RolesServiceGetAllRolePermissionsByTypeForbidden{}
}

/*
RolesServiceGetAllRolePermissionsByTypeForbidden describes a response with status code 403, with default header values.

Authentication failed
*/
type RolesServiceGetAllRolePermissionsByTypeForbidden struct {
	Payload *models.AuthenticationFailedResponse
}

// IsSuccess returns true when this roles service get all role permissions by type forbidden response has a 2xx status code
func (o *RolesServiceGetAllRolePermissionsByTypeForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this roles service get all role permissions by type forbidden response has a 3xx status code
func (o *RolesServiceGetAllRolePermissionsByTypeForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this roles service get all role permissions by type forbidden response has a 4xx status code
func (o *RolesServiceGetAllRolePermissionsByTypeForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this roles service get all role permissions by type forbidden response has a 5xx status code
func (o *RolesServiceGetAllRolePermissionsByTypeForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this roles service get all role permissions by type forbidden response a status code equal to that given
func (o *RolesServiceGetAllRolePermissionsByTypeForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the roles service get all role permissions by type forbidden response
func (o *RolesServiceGetAllRolePermissionsByTypeForbidden) Code() int {
	return 403
}

func (o *RolesServiceGetAllRolePermissionsByTypeForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v1/roles/{id}/permissions/unassigned][%d] rolesServiceGetAllRolePermissionsByTypeForbidden  %+v", 403, o.Payload)
}

func (o *RolesServiceGetAllRolePermissionsByTypeForbidden) String() string {
	return fmt.Sprintf("[GET /api/v1/roles/{id}/permissions/unassigned][%d] rolesServiceGetAllRolePermissionsByTypeForbidden  %+v", 403, o.Payload)
}

func (o *RolesServiceGetAllRolePermissionsByTypeForbidden) GetPayload() *models.AuthenticationFailedResponse {
	return o.Payload
}

func (o *RolesServiceGetAllRolePermissionsByTypeForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AuthenticationFailedResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRolesServiceGetAllRolePermissionsByTypeInternalServerError creates a RolesServiceGetAllRolePermissionsByTypeInternalServerError with default headers values
func NewRolesServiceGetAllRolePermissionsByTypeInternalServerError() *RolesServiceGetAllRolePermissionsByTypeInternalServerError {
	return &RolesServiceGetAllRolePermissionsByTypeInternalServerError{}
}

/*
RolesServiceGetAllRolePermissionsByTypeInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type RolesServiceGetAllRolePermissionsByTypeInternalServerError struct {
	Payload *models.InternalServerErrorResponse
}

// IsSuccess returns true when this roles service get all role permissions by type internal server error response has a 2xx status code
func (o *RolesServiceGetAllRolePermissionsByTypeInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this roles service get all role permissions by type internal server error response has a 3xx status code
func (o *RolesServiceGetAllRolePermissionsByTypeInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this roles service get all role permissions by type internal server error response has a 4xx status code
func (o *RolesServiceGetAllRolePermissionsByTypeInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this roles service get all role permissions by type internal server error response has a 5xx status code
func (o *RolesServiceGetAllRolePermissionsByTypeInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this roles service get all role permissions by type internal server error response a status code equal to that given
func (o *RolesServiceGetAllRolePermissionsByTypeInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the roles service get all role permissions by type internal server error response
func (o *RolesServiceGetAllRolePermissionsByTypeInternalServerError) Code() int {
	return 500
}

func (o *RolesServiceGetAllRolePermissionsByTypeInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v1/roles/{id}/permissions/unassigned][%d] rolesServiceGetAllRolePermissionsByTypeInternalServerError  %+v", 500, o.Payload)
}

func (o *RolesServiceGetAllRolePermissionsByTypeInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v1/roles/{id}/permissions/unassigned][%d] rolesServiceGetAllRolePermissionsByTypeInternalServerError  %+v", 500, o.Payload)
}

func (o *RolesServiceGetAllRolePermissionsByTypeInternalServerError) GetPayload() *models.InternalServerErrorResponse {
	return o.Payload
}

func (o *RolesServiceGetAllRolePermissionsByTypeInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
