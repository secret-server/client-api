// Code generated by go-swagger; DO NOT EDIT.

package roles

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/secret-server/client-api/models"
)

// RolesServiceGetReader is a Reader for the RolesServiceGet structure.
type RolesServiceGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RolesServiceGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewRolesServiceGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewRolesServiceGetBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewRolesServiceGetForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewRolesServiceGetInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /api/v1/roles/{id}] RolesService_Get", response, response.Code())
	}
}

// NewRolesServiceGetOK creates a RolesServiceGetOK with default headers values
func NewRolesServiceGetOK() *RolesServiceGetOK {
	return &RolesServiceGetOK{}
}

/*
RolesServiceGetOK describes a response with status code 200, with default header values.

Role model result object
*/
type RolesServiceGetOK struct {
	Payload *models.RoleModel
}

// IsSuccess returns true when this roles service get o k response has a 2xx status code
func (o *RolesServiceGetOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this roles service get o k response has a 3xx status code
func (o *RolesServiceGetOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this roles service get o k response has a 4xx status code
func (o *RolesServiceGetOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this roles service get o k response has a 5xx status code
func (o *RolesServiceGetOK) IsServerError() bool {
	return false
}

// IsCode returns true when this roles service get o k response a status code equal to that given
func (o *RolesServiceGetOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the roles service get o k response
func (o *RolesServiceGetOK) Code() int {
	return 200
}

func (o *RolesServiceGetOK) Error() string {
	return fmt.Sprintf("[GET /api/v1/roles/{id}][%d] rolesServiceGetOK  %+v", 200, o.Payload)
}

func (o *RolesServiceGetOK) String() string {
	return fmt.Sprintf("[GET /api/v1/roles/{id}][%d] rolesServiceGetOK  %+v", 200, o.Payload)
}

func (o *RolesServiceGetOK) GetPayload() *models.RoleModel {
	return o.Payload
}

func (o *RolesServiceGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RoleModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRolesServiceGetBadRequest creates a RolesServiceGetBadRequest with default headers values
func NewRolesServiceGetBadRequest() *RolesServiceGetBadRequest {
	return &RolesServiceGetBadRequest{}
}

/*
RolesServiceGetBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type RolesServiceGetBadRequest struct {
	Payload *models.BadRequestResponse
}

// IsSuccess returns true when this roles service get bad request response has a 2xx status code
func (o *RolesServiceGetBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this roles service get bad request response has a 3xx status code
func (o *RolesServiceGetBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this roles service get bad request response has a 4xx status code
func (o *RolesServiceGetBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this roles service get bad request response has a 5xx status code
func (o *RolesServiceGetBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this roles service get bad request response a status code equal to that given
func (o *RolesServiceGetBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the roles service get bad request response
func (o *RolesServiceGetBadRequest) Code() int {
	return 400
}

func (o *RolesServiceGetBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v1/roles/{id}][%d] rolesServiceGetBadRequest  %+v", 400, o.Payload)
}

func (o *RolesServiceGetBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v1/roles/{id}][%d] rolesServiceGetBadRequest  %+v", 400, o.Payload)
}

func (o *RolesServiceGetBadRequest) GetPayload() *models.BadRequestResponse {
	return o.Payload
}

func (o *RolesServiceGetBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BadRequestResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRolesServiceGetForbidden creates a RolesServiceGetForbidden with default headers values
func NewRolesServiceGetForbidden() *RolesServiceGetForbidden {
	return &RolesServiceGetForbidden{}
}

/*
RolesServiceGetForbidden describes a response with status code 403, with default header values.

Authentication failed
*/
type RolesServiceGetForbidden struct {
	Payload *models.AuthenticationFailedResponse
}

// IsSuccess returns true when this roles service get forbidden response has a 2xx status code
func (o *RolesServiceGetForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this roles service get forbidden response has a 3xx status code
func (o *RolesServiceGetForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this roles service get forbidden response has a 4xx status code
func (o *RolesServiceGetForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this roles service get forbidden response has a 5xx status code
func (o *RolesServiceGetForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this roles service get forbidden response a status code equal to that given
func (o *RolesServiceGetForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the roles service get forbidden response
func (o *RolesServiceGetForbidden) Code() int {
	return 403
}

func (o *RolesServiceGetForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v1/roles/{id}][%d] rolesServiceGetForbidden  %+v", 403, o.Payload)
}

func (o *RolesServiceGetForbidden) String() string {
	return fmt.Sprintf("[GET /api/v1/roles/{id}][%d] rolesServiceGetForbidden  %+v", 403, o.Payload)
}

func (o *RolesServiceGetForbidden) GetPayload() *models.AuthenticationFailedResponse {
	return o.Payload
}

func (o *RolesServiceGetForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AuthenticationFailedResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRolesServiceGetInternalServerError creates a RolesServiceGetInternalServerError with default headers values
func NewRolesServiceGetInternalServerError() *RolesServiceGetInternalServerError {
	return &RolesServiceGetInternalServerError{}
}

/*
RolesServiceGetInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type RolesServiceGetInternalServerError struct {
	Payload *models.InternalServerErrorResponse
}

// IsSuccess returns true when this roles service get internal server error response has a 2xx status code
func (o *RolesServiceGetInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this roles service get internal server error response has a 3xx status code
func (o *RolesServiceGetInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this roles service get internal server error response has a 4xx status code
func (o *RolesServiceGetInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this roles service get internal server error response has a 5xx status code
func (o *RolesServiceGetInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this roles service get internal server error response a status code equal to that given
func (o *RolesServiceGetInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the roles service get internal server error response
func (o *RolesServiceGetInternalServerError) Code() int {
	return 500
}

func (o *RolesServiceGetInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v1/roles/{id}][%d] rolesServiceGetInternalServerError  %+v", 500, o.Payload)
}

func (o *RolesServiceGetInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v1/roles/{id}][%d] rolesServiceGetInternalServerError  %+v", 500, o.Payload)
}

func (o *RolesServiceGetInternalServerError) GetPayload() *models.InternalServerErrorResponse {
	return o.Payload
}

func (o *RolesServiceGetInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalServerErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
